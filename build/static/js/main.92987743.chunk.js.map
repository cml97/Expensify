{"version":3,"sources":["serviceWorker.js","actions/expenses.js","components/ExpenseListItem.jsx","components/ExpenseDashboardPage.jsx","components/ExpenseForm.jsx","components/AddExpensePage.jsx","components/EditExpensePage.jsx","components/HelpPage.jsx","components/NotFoundPage.jsx","components/Header.jsx","reducers/expenses.js","reducers/filters.js","reducers/index.js","routes/AppRouter.jsx","store/store.js","index.js"],"names":["Boolean","window","location","hostname","match","addExpense","expense","type","payload","ExpenseListItem","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","item","console","log","react_default","a","createElement","react_router_dom","to","concat","id","description","note","amount","createdAt","onClick","dispatch","React","Component","connect","ExpenseDashboardPage","nextProps","expenses","map","key","components_ExpenseListItem","state","filters","ExpenseForm","onFocusChange","_ref","focused","setState","calendarFocused","updateData","value","form","handleSubmit","e","preventDefault","onSubmit","error","objectSpread","valueOf","moment","_this2","_this$state","placeholder","autoFocus","onChange","target","react_dates","date","onDateChange","_ref2","numberOfMonths","isOutsideRange","AddExpensePage","components_ExpenseForm","history","push","EditExpensePage","find","params","HelpPage","NotFoundPage","Header","defaultExpenses","defaultFilter","text","sortBy","startDate","undefined","endDate","reducers","arguments","length","action","toConsumableArray","filter","model","store","rootReducer","combineReducers","createStore","__REDUX_DEVTOOLS_EXTENSION__","configureStore","AppRouter","es","components_Header","react_router","path","component","exact","ReactDOM","render","routes_AppRouter","className","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92987743.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nexport const addExpense = (expense) => {\n  return {\n    type: 'ADD_EXPENSE',\n    payload: expense\n  }\n};\n\nexport const removeExpense = (id) => {\n  return {\n    type: 'REMOVE_EXPENSE',\n    payload: id\n  }\n};\n\nexport const getExpenses = () => {\n  return {\n    type: 'GET_EXPENSES'\n  }\n}\n\nexport const getExpense = (id) => {\n  return {\n    type: 'GET_EXPENSE',\n    payload: id\n  }\n};\nexport const editExpense = (id, model) => {\n  return {\n    type: 'EDIT_EXPENSE',\n    id,\n    model\n  }\n}\n","import React from 'react';\nimport { removeExpense } from '../actions/expenses';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass ExpenseListItem extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let { item } = this.props;\n    console.log(this.props);\n    return (\n      <div>\n        <Link to={`/edit/${item.id}`}><h1>{item.description}</h1></Link>\n        <p>{item.note}</p>\n        <p>{item.amount} - {item.createdAt}</p>\n        <button\n          onClick={() => this.props.dispatch(removeExpense(item.id))}\n        >\n          Remove\n        </button>\n      </div>\n    );\n  }\n}\nexport default connect()(ExpenseListItem);\n","import React from 'react';\nimport { addExpense, removeExpense } from '../actions/expenses.js';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport ExpenseListItem from './ExpenseListItem';\n\nclass ExpenseDashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentWillMount() {\n\n  }\n\n  componentWillReceiveProps(nextProps) {\n\n  }\n  render() {\n    return (\n      <div>\n        {this.props.expenses.map((item, key) => {\n          return (\n            <ExpenseListItem item={item} key={key}/>\n          )\n        })}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    expenses: state.expenses,\n    filters: state.filters\n  }\n}\nexport default connect(mapStateToProps)(ExpenseDashboardPage);\n","import React from 'react';\nimport { SingleDatePicker } from 'react-dates';\nimport moment from 'moment';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { addExpense } from '../actions/expenses.js';\n\nclass ExpenseForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      form: {\n        id: props.expense ? props.expense.id : 0,\n        description: props.expense ? props.expense.description : '',\n        note: props.expense ? props.expense.note : '',\n        amount: props.expense ? props.expense.amount : 0,\n        createdAt: props.expense ? moment(props.expense.createdAt): moment(),\n      },\n      calendarFocused: false,\n      error: ''\n    }\n  }\n\n  onFocusChange = ({ focused }) => {\n    this.setState({\n      calendarFocused: focused\n    })\n  }\n  updateData = (key, value) => {\n    let { form } = this.state;\n    form[key] = value;\n\n    this.setState({\n      form\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    let { form } = this.state;\n    let valid = form.description && form.amount;\n\n    if (valid && this.props.onSubmit) {\n      this.setState({\n        error: ''\n      })\n      this.props.onSubmit({...form, createdAt: form.createdAt.valueOf()});\n\n    }\n    else {\n      this.setState({\n        error: 'Please enter description and amount'\n      })\n    }\n  }\n  render() {\n    let { form, calendarFocused } = this.state;\n\n    return (\n    <div>\n      <form onSubmit={(e) => this.handleSubmit(e)}>\n        <input type=\"number\" placeholder=\"Description\" autoFocus value={form.id} onChange={(e) => this.updateData('id', e.target.value )}/>\n        <input type=\"text\" placeholder=\"Description\" value={form.description} onChange={(e) => this.updateData('description', e.target.value )}/>\n        <input type=\"number\" placeholder=\"Amount\" value={form.amount} onChange={(e) => this.updateData('amount', e.target.value)}/>\n        <SingleDatePicker\n           date={form.createdAt}\n           onDateChange={(createdAt) => this.updateData('createdAt',createdAt)}\n           focused={calendarFocused}\n           onFocusChange={({focused}) => this.onFocusChange({focused})}\n           numberOfMonths={1}\n           isOutsideRange={() => false}\n        />\n        <textarea placeholder=\"Add a note for your expense\" value={form.note} onChange={(e) => this.updateData('note', e.target.value)}></textarea>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  )\n  }\n}\nexport default ExpenseForm;\n","import React from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport { connect } from 'react-redux';\nimport { addExpense } from '../actions/expenses';\n\nclass AddExpensePage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  onSubmit = (form) => {\n    this.props.dispatch(addExpense(form));\n  }\n  render() {\n    return (\n      <div>\n        <ExpenseForm onSubmit={(form) => {this.onSubmit(form); this.props.history.push(\"/\")}}/>\n      </div>\n    );\n  }\n}\nexport default connect()(AddExpensePage);\n","import React from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport { addExpense } from '../actions/expenses';\nimport { connect } from 'react-redux';\n\nclass EditExpensePage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  onSubmit = (form) => {\n\n  }\n  componentWillReceiveProps(nextProps) {\n\n  }\n  render() {\n    console.log(this.props.expense);\n    return (\n      <div>\n        <ExpenseForm\n          onSubmit={(form) => {this.onSubmit(form); this.props.history.push(\"/\")}}\n          expense={this.props.expense}\n          />\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state, props) => {\n  return {\n    expense: state.expenses.find((expense) => expense.id == props.match.params.id)\n  }\n}\nexport default connect(mapStateToProps)(EditExpensePage);\n","import React from 'react';\n\nclass HelpPage extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div></div>\n    );\n  }\n}\n\nexport default HelpPage;\n","import React from 'react';\n\nconst NotFoundPage = () => {\n  return (\n    <div>\n      <h1>Not Found</h1>\n    </div>\n  );\n};\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { addExpense } from '../actions/expenses.js';\nimport { connect } from 'react-redux';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Expensify</h1>\n        <Link to=\"/\">Dashboard</Link>\n        <Link to=\"/create\">Create Expense</Link>\n        <Link to=\"/help\">Help</Link>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","\nconst defaultExpenses = [];\n\nexport default (state = defaultExpenses, action) => {\n    switch (action.type) {\n      case 'ADD_EXPENSE':\n        return [\n          ...state,\n          action.payload,\n        ];\n      case 'REMOVE_EXPENSE':\n        return state.filter(item => item.id !== action.payload);\n      case 'EDIT_EXPENSE':\n        return state.map((item) => {\n          if (item.id === action.id) {\n            return { ...item, ...action.model }\n          }\n          else {\n            return item;\n          }\n        })\n      default:\n        return state;\n    }\n};\n","\nconst defaultFilter = {\n  text: '',\n  sortBy: '',\n  startDate: undefined,\n  endDate: undefined\n}\n\nexport default (state = defaultFilter, action) => {\n  switch (action.type) {\n    case 'SORT_BY_AMOUNT':\n      return {\n        ...state,\n        sortBy: 'amount'\n      }\n    case 'SORT_BY_DATE':\n      return {\n        ...state,\n        sortBy: 'date'\n      }\n    case 'SET_START_DATE':\n      return {\n        ...state,\n        startDate: action.startDate\n      }\n    case 'SET_END_DATE':\n      return {\n        ...state,\n        endDate: action.endDate\n      }\n    case 'SET_TEXT_FILTER':\n      return {\n        ...state,\n        text: action.text\n      }\n    default:\n      return state;\n  }\n}\n","import expenses from './expenses.js';\nimport filters from './filters.js';\n\nexport default {\n  expenses,\n  filters\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Switch, NavLink } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport {\nExpenseDashboardPage,\nAddExpensePage,\nEditExpensePage,\nHelpPage,\nNotFoundPage,\nHeader\n} from '../components';\n\nimport configureStore from '../store/store.js';\n\nconst store = configureStore();\n\nclass AppRouter extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n        <div>\n          <Header />\n          <Switch>\n            <Route path=\"/\" component={ExpenseDashboardPage} exact={true} />\n            <Route path=\"/create\" component={AddExpensePage} />\n            <Route path=\"/edit/:id\" component={EditExpensePage} />\n            <Route path=\"/help\" component={HelpPage} />\n            <Route component={NotFoundPage} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default AppRouter;\n","import { createStore, combineReducers } from 'redux';\nimport reducers from '../reducers';\n\nexport default () => {\n  const rootReducer = combineReducers({\n    expenses: reducers.expenses,\n    filters: reducers.filters\n  })\n  const store = createStore(\n    rootReducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppRouter from './routes/AppRouter';\nimport configureStore from './store/store.js';\n\n\n\nReactDOM.render(<AppRouter className=\"AppRouter\" />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}