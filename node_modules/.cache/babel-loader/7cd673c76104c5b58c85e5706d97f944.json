{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _object = require('object.assign');\n\nvar _object2 = _interopRequireDefault(_object);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _airbnbPropTypes = require('airbnb-prop-types');\n\nvar _reactWithStyles = require('react-with-styles');\n\nvar _defaultPhrases = require('../defaultPhrases');\n\nvar _getPhrasePropTypes = require('../utils/getPhrasePropTypes');\n\nvar _getPhrasePropTypes2 = _interopRequireDefault(_getPhrasePropTypes);\n\nvar _DateInput = require('./DateInput');\n\nvar _DateInput2 = _interopRequireDefault(_DateInput);\n\nvar _IconPositionShape = require('../shapes/IconPositionShape');\n\nvar _IconPositionShape2 = _interopRequireDefault(_IconPositionShape);\n\nvar _CloseButton = require('./CloseButton');\n\nvar _CloseButton2 = _interopRequireDefault(_CloseButton);\n\nvar _CalendarIcon = require('./CalendarIcon');\n\nvar _CalendarIcon2 = _interopRequireDefault(_CalendarIcon);\n\nvar _OpenDirectionShape = require('../shapes/OpenDirectionShape');\n\nvar _OpenDirectionShape2 = _interopRequireDefault(_OpenDirectionShape);\n\nvar _constants = require('../constants');\n\nvar _baseClass = require('../utils/baseClass');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar propTypes = process.env.NODE_ENV !== \"production\" ? (0, _airbnbPropTypes.forbidExtraProps)((0, _object2['default'])({}, _reactWithStyles.withStylesPropTypes, {\n  id: _propTypes2['default'].string.isRequired,\n  placeholder: _propTypes2['default'].string,\n  // also used as label\n  displayValue: _propTypes2['default'].string,\n  screenReaderMessage: _propTypes2['default'].string,\n  focused: _propTypes2['default'].bool,\n  isFocused: _propTypes2['default'].bool,\n  // describes actual DOM focus\n  disabled: _propTypes2['default'].bool,\n  required: _propTypes2['default'].bool,\n  readOnly: _propTypes2['default'].bool,\n  openDirection: _OpenDirectionShape2['default'],\n  showCaret: _propTypes2['default'].bool,\n  showClearDate: _propTypes2['default'].bool,\n  customCloseIcon: _propTypes2['default'].node,\n  showDefaultInputIcon: _propTypes2['default'].bool,\n  inputIconPosition: _IconPositionShape2['default'],\n  customInputIcon: _propTypes2['default'].node,\n  isRTL: _propTypes2['default'].bool,\n  noBorder: _propTypes2['default'].bool,\n  block: _propTypes2['default'].bool,\n  small: _propTypes2['default'].bool,\n  regular: _propTypes2['default'].bool,\n  verticalSpacing: _airbnbPropTypes.nonNegativeInteger,\n  onChange: _propTypes2['default'].func,\n  onClearDate: _propTypes2['default'].func,\n  onFocus: _propTypes2['default'].func,\n  onKeyDownShiftTab: _propTypes2['default'].func,\n  onKeyDownTab: _propTypes2['default'].func,\n  onKeyDownArrowDown: _propTypes2['default'].func,\n  onKeyDownQuestionMark: _propTypes2['default'].func,\n  // i18n\n  phrases: _propTypes2['default'].shape((0, _getPhrasePropTypes2['default'])(_defaultPhrases.SingleDatePickerInputPhrases))\n})) : {};\n;\nvar defaultProps = {\n  placeholder: 'Select Date',\n  displayValue: '',\n  screenReaderMessage: '',\n  focused: false,\n  isFocused: false,\n  disabled: false,\n  required: false,\n  readOnly: false,\n  openDirection: _constants.OPEN_DOWN,\n  showCaret: false,\n  showClearDate: false,\n  showDefaultInputIcon: false,\n  inputIconPosition: _constants.ICON_BEFORE_POSITION,\n  customCloseIcon: null,\n  customInputIcon: null,\n  isRTL: false,\n  noBorder: false,\n  block: false,\n  small: false,\n  regular: false,\n  verticalSpacing: undefined,\n  onChange: function () {\n    function onChange() {}\n\n    return onChange;\n  }(),\n  onClearDate: function () {\n    function onClearDate() {}\n\n    return onClearDate;\n  }(),\n  onFocus: function () {\n    function onFocus() {}\n\n    return onFocus;\n  }(),\n  onKeyDownShiftTab: function () {\n    function onKeyDownShiftTab() {}\n\n    return onKeyDownShiftTab;\n  }(),\n  onKeyDownTab: function () {\n    function onKeyDownTab() {}\n\n    return onKeyDownTab;\n  }(),\n  onKeyDownArrowDown: function () {\n    function onKeyDownArrowDown() {}\n\n    return onKeyDownArrowDown;\n  }(),\n  onKeyDownQuestionMark: function () {\n    function onKeyDownQuestionMark() {}\n\n    return onKeyDownQuestionMark;\n  }(),\n  // i18n\n  phrases: _defaultPhrases.SingleDatePickerInputPhrases\n};\n\nfunction SingleDatePickerInput(_ref) {\n  var id = _ref.id,\n      placeholder = _ref.placeholder,\n      displayValue = _ref.displayValue,\n      focused = _ref.focused,\n      isFocused = _ref.isFocused,\n      disabled = _ref.disabled,\n      required = _ref.required,\n      readOnly = _ref.readOnly,\n      showCaret = _ref.showCaret,\n      showClearDate = _ref.showClearDate,\n      showDefaultInputIcon = _ref.showDefaultInputIcon,\n      inputIconPosition = _ref.inputIconPosition,\n      phrases = _ref.phrases,\n      onClearDate = _ref.onClearDate,\n      onChange = _ref.onChange,\n      onFocus = _ref.onFocus,\n      onKeyDownShiftTab = _ref.onKeyDownShiftTab,\n      onKeyDownTab = _ref.onKeyDownTab,\n      onKeyDownArrowDown = _ref.onKeyDownArrowDown,\n      onKeyDownQuestionMark = _ref.onKeyDownQuestionMark,\n      screenReaderMessage = _ref.screenReaderMessage,\n      customCloseIcon = _ref.customCloseIcon,\n      customInputIcon = _ref.customInputIcon,\n      openDirection = _ref.openDirection,\n      isRTL = _ref.isRTL,\n      noBorder = _ref.noBorder,\n      block = _ref.block,\n      small = _ref.small,\n      regular = _ref.regular,\n      verticalSpacing = _ref.verticalSpacing,\n      styles = _ref.styles;\n\n  var calendarIcon = customInputIcon || _react2['default'].createElement(_CalendarIcon2['default'], (0, _reactWithStyles.css)(styles.SingleDatePickerInput_calendarIcon_svg));\n\n  var closeIcon = customCloseIcon || _react2['default'].createElement(_CloseButton2['default'], (0, _reactWithStyles.css)(styles.SingleDatePickerInput_clearDate_svg, small && styles.SingleDatePickerInput_clearDate_svg__small));\n\n  var screenReaderText = screenReaderMessage || phrases.keyboardNavigationInstructions;\n\n  var inputIcon = (showDefaultInputIcon || customInputIcon !== null) && _react2['default'].createElement('button', _extends({}, (0, _reactWithStyles.css)(styles.SingleDatePickerInput_calendarIcon), {\n    type: 'button',\n    disabled: disabled,\n    'aria-label': phrases.focusStartDate,\n    onClick: onFocus\n  }), calendarIcon);\n\n  return _react2['default'].createElement('div', (0, _reactWithStyles.css)(styles.SingleDatePickerInput, disabled && styles.SingleDatePickerInput__disabled, isRTL && styles.SingleDatePickerInput__rtl, !noBorder && styles.SingleDatePickerInput__withBorder, block && styles.SingleDatePickerInput__block, showClearDate && styles.SingleDatePickerInput__showClearDate), inputIconPosition === _constants.ICON_BEFORE_POSITION && inputIcon, _react2['default'].createElement(_DateInput2['default'], {\n    id: id,\n    placeholder: placeholder // also used as label\n    ,\n    displayValue: displayValue,\n    screenReaderMessage: screenReaderText,\n    focused: focused,\n    isFocused: isFocused,\n    disabled: disabled,\n    required: required,\n    readOnly: readOnly,\n    showCaret: showCaret,\n    onChange: onChange,\n    onFocus: onFocus,\n    onKeyDownShiftTab: onKeyDownShiftTab,\n    onKeyDownTab: onKeyDownTab,\n    onKeyDownArrowDown: onKeyDownArrowDown,\n    onKeyDownQuestionMark: onKeyDownQuestionMark,\n    openDirection: openDirection,\n    verticalSpacing: verticalSpacing,\n    small: small,\n    regular: regular,\n    block: block\n  }), showClearDate && _react2['default'].createElement('button', _extends({}, (0, _reactWithStyles.css)(styles.SingleDatePickerInput_clearDate, small && styles.SingleDatePickerInput_clearDate__small, !customCloseIcon && styles.SingleDatePickerInput_clearDate__default, !displayValue && styles.SingleDatePickerInput_clearDate__hide), {\n    type: 'button',\n    'aria-label': phrases.clearDate,\n    disabled: disabled,\n    onClick: onClearDate\n  }), closeIcon), inputIconPosition === _constants.ICON_AFTER_POSITION && inputIcon);\n}\n\nSingleDatePickerInput.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nSingleDatePickerInput.defaultProps = defaultProps;\nexports['default'] = (0, _reactWithStyles.withStyles)(function (_ref2) {\n  var _ref2$reactDates = _ref2.reactDates,\n      border = _ref2$reactDates.border,\n      color = _ref2$reactDates.color;\n  return {\n    SingleDatePickerInput: {\n      display: 'inline-block',\n      backgroundColor: color.background\n    },\n    SingleDatePickerInput__withBorder: {\n      borderColor: color.border,\n      borderWidth: border.pickerInput.borderWidth,\n      borderStyle: border.pickerInput.borderStyle,\n      borderRadius: border.pickerInput.borderRadius\n    },\n    SingleDatePickerInput__rtl: {\n      direction: 'rtl'\n    },\n    SingleDatePickerInput__disabled: {\n      backgroundColor: color.disabled\n    },\n    SingleDatePickerInput__block: {\n      display: 'block'\n    },\n    SingleDatePickerInput__showClearDate: {\n      paddingRight: 30\n    },\n    SingleDatePickerInput_clearDate: {\n      background: 'none',\n      border: 0,\n      color: 'inherit',\n      font: 'inherit',\n      lineHeight: 'normal',\n      overflow: 'visible',\n      cursor: 'pointer',\n      padding: 10,\n      margin: '0 10px 0 5px',\n      position: 'absolute',\n      right: 0,\n      top: '50%',\n      transform: 'translateY(-50%)'\n    },\n    SingleDatePickerInput_clearDate__default: {\n      ':focus': {\n        background: color.core.border,\n        borderRadius: '50%'\n      },\n      ':hover': {\n        background: color.core.border,\n        borderRadius: '50%'\n      }\n    },\n    SingleDatePickerInput_clearDate__small: {\n      padding: 6\n    },\n    SingleDatePickerInput_clearDate__hide: {\n      visibility: 'hidden'\n    },\n    SingleDatePickerInput_clearDate_svg: {\n      fill: color.core.grayLight,\n      height: 12,\n      width: 15,\n      verticalAlign: 'middle'\n    },\n    SingleDatePickerInput_clearDate_svg__small: {\n      height: 9\n    },\n    SingleDatePickerInput_calendarIcon: {\n      background: 'none',\n      border: 0,\n      color: 'inherit',\n      font: 'inherit',\n      lineHeight: 'normal',\n      overflow: 'visible',\n      cursor: 'pointer',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      padding: 10,\n      margin: '0 5px 0 10px'\n    },\n    SingleDatePickerInput_calendarIcon_svg: {\n      fill: color.core.grayLight,\n      height: 15,\n      width: 14,\n      verticalAlign: 'middle'\n    }\n  };\n}, {\n  pureComponent: _baseClass.pureComponentAvailable\n})(SingleDatePickerInput);","map":null,"metadata":{},"sourceType":"script"}