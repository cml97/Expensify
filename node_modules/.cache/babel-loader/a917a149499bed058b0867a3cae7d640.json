{"ast":null,"code":"import _objectSpread from \"/Users/mac/Desktop/ReactTutorial/Projects/redux-project/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/mac/Desktop/ReactTutorial/Projects/redux-project/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nvar initialState = {\n  count: 0\n};\n\nvar incrementCount = function incrementCount() {\n  return {\n    type: 'INCREMENT'\n  };\n};\n\nvar reducer = function reducer(action, state) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return _objectSpread({}, state, {\n        count: state.count + 1\n      });\n\n    default:\n      break;\n  }\n};\n\nvar store = createStore(function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  return {\n    reducer: reducer,\n    state: state\n  };\n});\nconsole.log(store.getState());\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/mac/Desktop/ReactTutorial/Projects/redux-project/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","initialState","count","incrementCount","type","reducer","action","state","store","console","log","getState","render","document","getElementById","unregister"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,IAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAKA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAASC,KAAT,EAAmB;AACjC,UAAQD,MAAM,CAACF,IAAf;AACE,SAAK,WAAL;AACE,+BAAYG,KAAZ;AAAmBL,QAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,GAAc;AAAxC;;AAEF;AACE;AALJ;AAOD,CARD;;AASA,IAAMM,KAAK,GAAGR,WAAW,CAAC,YAA0B;AAAA,MAAzBO,KAAyB,uEAAjBN,YAAiB;AAClD,SAAO;AACLI,IAAAA,OAAO,EAAPA,OADK;AAELE,IAAAA,KAAK,EAALA;AAFK,GAAP;AAID,CALwB,CAAzB;AAOAE,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ;AAIAd,QAAQ,CAACe,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CAEA;AACA;AACA;;AACAf,aAAa,CAACgB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\n\nconst initialState = { count: 0 };\n\nconst incrementCount = () => {\n  return {\n    type: 'INCREMENT',\n  }\n}\nconst reducer = (action, state) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return { ...state, count: state.count + 1}\n\n    default:\n      break;\n  }\n}\nconst store = createStore((state = initialState) => {\n  return {\n    reducer,\n    state\n  };\n});\n\nconsole.log(store.getState());\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}