{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _object = require('object.assign');\n\nvar _object2 = _interopRequireDefault(_object);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactMomentProptypes = require('react-moment-proptypes');\n\nvar _reactMomentProptypes2 = _interopRequireDefault(_reactMomentProptypes);\n\nvar _airbnbPropTypes = require('airbnb-prop-types');\n\nvar _reactWithStyles = require('react-with-styles');\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _defaultPhrases = require('../defaultPhrases');\n\nvar _getPhrasePropTypes = require('../utils/getPhrasePropTypes');\n\nvar _getPhrasePropTypes2 = _interopRequireDefault(_getPhrasePropTypes);\n\nvar _CalendarWeek = require('./CalendarWeek');\n\nvar _CalendarWeek2 = _interopRequireDefault(_CalendarWeek);\n\nvar _CalendarDay = require('./CalendarDay');\n\nvar _CalendarDay2 = _interopRequireDefault(_CalendarDay);\n\nvar _calculateDimension = require('../utils/calculateDimension');\n\nvar _calculateDimension2 = _interopRequireDefault(_calculateDimension);\n\nvar _getCalendarMonthWeeks = require('../utils/getCalendarMonthWeeks');\n\nvar _getCalendarMonthWeeks2 = _interopRequireDefault(_getCalendarMonthWeeks);\n\nvar _isSameDay = require('../utils/isSameDay');\n\nvar _isSameDay2 = _interopRequireDefault(_isSameDay);\n\nvar _toISODateString = require('../utils/toISODateString');\n\nvar _toISODateString2 = _interopRequireDefault(_toISODateString);\n\nvar _ModifiersShape = require('../shapes/ModifiersShape');\n\nvar _ModifiersShape2 = _interopRequireDefault(_ModifiersShape);\n\nvar _ScrollableOrientationShape = require('../shapes/ScrollableOrientationShape');\n\nvar _ScrollableOrientationShape2 = _interopRequireDefault(_ScrollableOrientationShape);\n\nvar _DayOfWeekShape = require('../shapes/DayOfWeekShape');\n\nvar _DayOfWeekShape2 = _interopRequireDefault(_DayOfWeekShape);\n\nvar _baseClass = require('../utils/baseClass');\n\nvar _baseClass2 = _interopRequireDefault(_baseClass);\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/* eslint react/no-array-index-key: 0 */\n\n\nvar propTypes = (0, _airbnbPropTypes.forbidExtraProps)((0, _object2['default'])({}, _reactWithStyles.withStylesPropTypes, {\n  month: _reactMomentProptypes2['default'].momentObj,\n  horizontalMonthPadding: _airbnbPropTypes.nonNegativeInteger,\n  isVisible: _propTypes2['default'].bool,\n  enableOutsideDays: _propTypes2['default'].bool,\n  modifiers: _propTypes2['default'].objectOf(_ModifiersShape2['default']),\n  orientation: _ScrollableOrientationShape2['default'],\n  daySize: _airbnbPropTypes.nonNegativeInteger,\n  onDayClick: _propTypes2['default'].func,\n  onDayMouseEnter: _propTypes2['default'].func,\n  onDayMouseLeave: _propTypes2['default'].func,\n  onMonthSelect: _propTypes2['default'].func,\n  onYearSelect: _propTypes2['default'].func,\n  renderMonthText: (0, _airbnbPropTypes.mutuallyExclusiveProps)(_propTypes2['default'].func, 'renderMonthText', 'renderMonthElement'),\n  renderCalendarDay: _propTypes2['default'].func,\n  renderDayContents: _propTypes2['default'].func,\n  renderMonthElement: (0, _airbnbPropTypes.mutuallyExclusiveProps)(_propTypes2['default'].func, 'renderMonthText', 'renderMonthElement'),\n  firstDayOfWeek: _DayOfWeekShape2['default'],\n  setMonthTitleHeight: _propTypes2['default'].func,\n  verticalBorderSpacing: _airbnbPropTypes.nonNegativeInteger,\n  focusedDate: _reactMomentProptypes2['default'].momentObj,\n  // indicates focusable day\n  isFocused: _propTypes2['default'].bool,\n  // indicates whether or not to move focus to focusable day\n  // i18n\n  monthFormat: _propTypes2['default'].string,\n  phrases: _propTypes2['default'].shape((0, _getPhrasePropTypes2['default'])(_defaultPhrases.CalendarDayPhrases)),\n  dayAriaLabelFormat: _propTypes2['default'].string\n}));\nvar defaultProps = {\n  month: (0, _moment2['default'])(),\n  horizontalMonthPadding: 13,\n  isVisible: true,\n  enableOutsideDays: false,\n  modifiers: {},\n  orientation: _constants.HORIZONTAL_ORIENTATION,\n  daySize: _constants.DAY_SIZE,\n  onDayClick: function () {\n    function onDayClick() {}\n\n    return onDayClick;\n  }(),\n  onDayMouseEnter: function () {\n    function onDayMouseEnter() {}\n\n    return onDayMouseEnter;\n  }(),\n  onDayMouseLeave: function () {\n    function onDayMouseLeave() {}\n\n    return onDayMouseLeave;\n  }(),\n  onMonthSelect: function () {\n    function onMonthSelect() {}\n\n    return onMonthSelect;\n  }(),\n  onYearSelect: function () {\n    function onYearSelect() {}\n\n    return onYearSelect;\n  }(),\n  renderMonthText: null,\n  renderCalendarDay: function () {\n    function renderCalendarDay(props) {\n      return _react2['default'].createElement(_CalendarDay2['default'], props);\n    }\n\n    return renderCalendarDay;\n  }(),\n  renderDayContents: null,\n  renderMonthElement: null,\n  firstDayOfWeek: null,\n  setMonthTitleHeight: null,\n  focusedDate: null,\n  isFocused: false,\n  // i18n\n  monthFormat: 'MMMM YYYY',\n  // english locale\n  phrases: _defaultPhrases.CalendarDayPhrases,\n  dayAriaLabelFormat: undefined,\n  verticalBorderSpacing: undefined\n};\n/** @extends React.Component */\n\nvar CalendarMonth = function (_BaseClass) {\n  _inherits(CalendarMonth, _BaseClass);\n\n  function CalendarMonth(props) {\n    _classCallCheck(this, CalendarMonth);\n\n    var _this = _possibleConstructorReturn(this, (CalendarMonth.__proto__ || Object.getPrototypeOf(CalendarMonth)).call(this, props));\n\n    _this.state = {\n      weeks: (0, _getCalendarMonthWeeks2['default'])(props.month, props.enableOutsideDays, props.firstDayOfWeek == null ? _moment2['default'].localeData().firstDayOfWeek() : props.firstDayOfWeek)\n    };\n    _this.setCaptionRef = _this.setCaptionRef.bind(_this);\n    _this.setMonthTitleHeight = _this.setMonthTitleHeight.bind(_this);\n    return _this;\n  }\n\n  _createClass(CalendarMonth, [{\n    key: 'componentDidMount',\n    value: function () {\n      function componentDidMount() {\n        this.setMonthTitleHeightTimeout = setTimeout(this.setMonthTitleHeight, 0);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function () {\n      function componentWillReceiveProps(nextProps) {\n        var month = nextProps.month,\n            enableOutsideDays = nextProps.enableOutsideDays,\n            firstDayOfWeek = nextProps.firstDayOfWeek;\n        var _props = this.props,\n            prevMonth = _props.month,\n            prevEnableOutsideDays = _props.enableOutsideDays,\n            prevFirstDayOfWeek = _props.firstDayOfWeek;\n\n        if (!month.isSame(prevMonth) || enableOutsideDays !== prevEnableOutsideDays || firstDayOfWeek !== prevFirstDayOfWeek) {\n          this.setState({\n            weeks: (0, _getCalendarMonthWeeks2['default'])(month, enableOutsideDays, firstDayOfWeek == null ? _moment2['default'].localeData().firstDayOfWeek() : firstDayOfWeek)\n          });\n        }\n      }\n\n      return componentWillReceiveProps;\n    }()\n  }, {\n    key: 'componentWillUnmount',\n    value: function () {\n      function componentWillUnmount() {\n        if (this.setMonthTitleHeightTimeout) {\n          clearTimeout(this.setMonthTitleHeightTimeout);\n        }\n      }\n\n      return componentWillUnmount;\n    }()\n  }, {\n    key: 'setMonthTitleHeight',\n    value: function () {\n      function setMonthTitleHeight() {\n        var setMonthTitleHeight = this.props.setMonthTitleHeight;\n\n        if (setMonthTitleHeight) {\n          var captionHeight = (0, _calculateDimension2['default'])(this.captionRef, 'height', true, true);\n          setMonthTitleHeight(captionHeight);\n        }\n      }\n\n      return setMonthTitleHeight;\n    }()\n  }, {\n    key: 'setCaptionRef',\n    value: function () {\n      function setCaptionRef(ref) {\n        this.captionRef = ref;\n      }\n\n      return setCaptionRef;\n    }()\n  }, {\n    key: 'render',\n    value: function () {\n      function render() {\n        var _props2 = this.props,\n            dayAriaLabelFormat = _props2.dayAriaLabelFormat,\n            daySize = _props2.daySize,\n            focusedDate = _props2.focusedDate,\n            horizontalMonthPadding = _props2.horizontalMonthPadding,\n            isFocused = _props2.isFocused,\n            isVisible = _props2.isVisible,\n            modifiers = _props2.modifiers,\n            month = _props2.month,\n            monthFormat = _props2.monthFormat,\n            onDayClick = _props2.onDayClick,\n            onDayMouseEnter = _props2.onDayMouseEnter,\n            onDayMouseLeave = _props2.onDayMouseLeave,\n            onMonthSelect = _props2.onMonthSelect,\n            onYearSelect = _props2.onYearSelect,\n            orientation = _props2.orientation,\n            phrases = _props2.phrases,\n            renderCalendarDay = _props2.renderCalendarDay,\n            renderDayContents = _props2.renderDayContents,\n            renderMonthElement = _props2.renderMonthElement,\n            renderMonthText = _props2.renderMonthText,\n            styles = _props2.styles,\n            verticalBorderSpacing = _props2.verticalBorderSpacing;\n        var weeks = this.state.weeks;\n        var monthTitle = renderMonthText ? renderMonthText(month) : month.format(monthFormat);\n        var verticalScrollable = orientation === _constants.VERTICAL_SCROLLABLE;\n        return _react2['default'].createElement('div', _extends({}, (0, _reactWithStyles.css)(styles.CalendarMonth, {\n          padding: '0 ' + String(horizontalMonthPadding) + 'px'\n        }), {\n          'data-visible': isVisible\n        }), _react2['default'].createElement('div', _extends({\n          ref: this.setCaptionRef\n        }, (0, _reactWithStyles.css)(styles.CalendarMonth_caption, verticalScrollable && styles.CalendarMonth_caption__verticalScrollable)), renderMonthElement ? renderMonthElement({\n          month: month,\n          onMonthSelect: onMonthSelect,\n          onYearSelect: onYearSelect\n        }) : _react2['default'].createElement('strong', null, monthTitle)), _react2['default'].createElement('table', _extends({}, (0, _reactWithStyles.css)(!verticalBorderSpacing && styles.CalendarMonth_table, verticalBorderSpacing && styles.CalendarMonth_verticalSpacing, verticalBorderSpacing && {\n          borderSpacing: '0px ' + String(verticalBorderSpacing) + 'px'\n        }), {\n          role: 'presentation'\n        }), _react2['default'].createElement('tbody', null, weeks.map(function (week, i) {\n          return _react2['default'].createElement(_CalendarWeek2['default'], {\n            key: i\n          }, week.map(function (day, dayOfWeek) {\n            return renderCalendarDay({\n              key: dayOfWeek,\n              day: day,\n              daySize: daySize,\n              isOutsideDay: !day || day.month() !== month.month(),\n              tabIndex: isVisible && (0, _isSameDay2['default'])(day, focusedDate) ? 0 : -1,\n              isFocused: isFocused,\n              onDayMouseEnter: onDayMouseEnter,\n              onDayMouseLeave: onDayMouseLeave,\n              onDayClick: onDayClick,\n              renderDayContents: renderDayContents,\n              phrases: phrases,\n              modifiers: modifiers[(0, _toISODateString2['default'])(day)],\n              ariaLabelFormat: dayAriaLabelFormat\n            });\n          }));\n        }))));\n      }\n\n      return render;\n    }()\n  }]);\n\n  return CalendarMonth;\n}(_baseClass2['default']);\n\nCalendarMonth.propTypes = propTypes;\nCalendarMonth.defaultProps = defaultProps;\nexports['default'] = (0, _reactWithStyles.withStyles)(function (_ref) {\n  var _ref$reactDates = _ref.reactDates,\n      color = _ref$reactDates.color,\n      font = _ref$reactDates.font,\n      spacing = _ref$reactDates.spacing;\n  return {\n    CalendarMonth: {\n      background: color.background,\n      textAlign: 'center',\n      verticalAlign: 'top',\n      userSelect: 'none'\n    },\n    CalendarMonth_table: {\n      borderCollapse: 'collapse',\n      borderSpacing: 0\n    },\n    CalendarMonth_verticalSpacing: {\n      borderCollapse: 'separate'\n    },\n    CalendarMonth_caption: {\n      color: color.text,\n      fontSize: font.captionSize,\n      textAlign: 'center',\n      paddingTop: spacing.captionPaddingTop,\n      paddingBottom: spacing.captionPaddingBottom,\n      captionSide: 'initial'\n    },\n    CalendarMonth_caption__verticalScrollable: {\n      paddingTop: 12,\n      paddingBottom: 7\n    }\n  };\n}, {\n  pureComponent: _baseClass.pureComponentAvailable\n})(CalendarMonth);","map":null,"metadata":{},"sourceType":"script"}