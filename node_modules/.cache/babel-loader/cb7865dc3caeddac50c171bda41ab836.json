{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BOTTOM_RIGHT = exports.TOP_RIGHT = exports.TOP_LEFT = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _object = require('object.assign');\n\nvar _object2 = _interopRequireDefault(_object);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _airbnbPropTypes = require('airbnb-prop-types');\n\nvar _reactWithStyles = require('react-with-styles');\n\nvar _defaultPhrases = require('../defaultPhrases');\n\nvar _getPhrasePropTypes = require('../utils/getPhrasePropTypes');\n\nvar _getPhrasePropTypes2 = _interopRequireDefault(_getPhrasePropTypes);\n\nvar _baseClass = require('../utils/baseClass');\n\nvar _baseClass2 = _interopRequireDefault(_baseClass);\n\nvar _KeyboardShortcutRow = require('./KeyboardShortcutRow');\n\nvar _KeyboardShortcutRow2 = _interopRequireDefault(_KeyboardShortcutRow);\n\nvar _CloseButton = require('./CloseButton');\n\nvar _CloseButton2 = _interopRequireDefault(_CloseButton);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar TOP_LEFT = exports.TOP_LEFT = 'top-left';\nvar TOP_RIGHT = exports.TOP_RIGHT = 'top-right';\nvar BOTTOM_RIGHT = exports.BOTTOM_RIGHT = 'bottom-right';\nvar propTypes = (0, _airbnbPropTypes.forbidExtraProps)((0, _object2['default'])({}, _reactWithStyles.withStylesPropTypes, {\n  block: _propTypes2['default'].bool,\n  buttonLocation: _propTypes2['default'].oneOf([TOP_LEFT, TOP_RIGHT, BOTTOM_RIGHT]),\n  showKeyboardShortcutsPanel: _propTypes2['default'].bool,\n  openKeyboardShortcutsPanel: _propTypes2['default'].func,\n  closeKeyboardShortcutsPanel: _propTypes2['default'].func,\n  phrases: _propTypes2['default'].shape((0, _getPhrasePropTypes2['default'])(_defaultPhrases.DayPickerKeyboardShortcutsPhrases))\n}));\nvar defaultProps = {\n  block: false,\n  buttonLocation: BOTTOM_RIGHT,\n  showKeyboardShortcutsPanel: false,\n  openKeyboardShortcutsPanel: function () {\n    function openKeyboardShortcutsPanel() {}\n\n    return openKeyboardShortcutsPanel;\n  }(),\n  closeKeyboardShortcutsPanel: function () {\n    function closeKeyboardShortcutsPanel() {}\n\n    return closeKeyboardShortcutsPanel;\n  }(),\n  phrases: _defaultPhrases.DayPickerKeyboardShortcutsPhrases\n};\n\nfunction getKeyboardShortcuts(phrases) {\n  return [{\n    unicode: '↵',\n    label: phrases.enterKey,\n    action: phrases.selectFocusedDate\n  }, {\n    unicode: '←/→',\n    label: phrases.leftArrowRightArrow,\n    action: phrases.moveFocusByOneDay\n  }, {\n    unicode: '↑/↓',\n    label: phrases.upArrowDownArrow,\n    action: phrases.moveFocusByOneWeek\n  }, {\n    unicode: 'PgUp/PgDn',\n    label: phrases.pageUpPageDown,\n    action: phrases.moveFocusByOneMonth\n  }, {\n    unicode: 'Home/End',\n    label: phrases.homeEnd,\n    action: phrases.moveFocustoStartAndEndOfWeek\n  }, {\n    unicode: 'Esc',\n    label: phrases.escape,\n    action: phrases.returnFocusToInput\n  }, {\n    unicode: '?',\n    label: phrases.questionMark,\n    action: phrases.openThisPanel\n  }];\n}\n/** @extends React.Component */\n\n\nvar DayPickerKeyboardShortcuts = function (_BaseClass) {\n  _inherits(DayPickerKeyboardShortcuts, _BaseClass);\n\n  function DayPickerKeyboardShortcuts() {\n    var _ref;\n\n    _classCallCheck(this, DayPickerKeyboardShortcuts);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = DayPickerKeyboardShortcuts.__proto__ || Object.getPrototypeOf(DayPickerKeyboardShortcuts)).call.apply(_ref, [this].concat(args)));\n\n    var phrases = _this.props.phrases;\n    _this.keyboardShortcuts = getKeyboardShortcuts(phrases);\n    _this.onShowKeyboardShortcutsButtonClick = _this.onShowKeyboardShortcutsButtonClick.bind(_this);\n    _this.setShowKeyboardShortcutsButtonRef = _this.setShowKeyboardShortcutsButtonRef.bind(_this);\n    _this.setHideKeyboardShortcutsButtonRef = _this.setHideKeyboardShortcutsButtonRef.bind(_this);\n    _this.handleFocus = _this.handleFocus.bind(_this);\n    _this.onKeyDown = _this.onKeyDown.bind(_this);\n    return _this;\n  }\n\n  _createClass(DayPickerKeyboardShortcuts, [{\n    key: 'componentWillReceiveProps',\n    value: function () {\n      function componentWillReceiveProps(nextProps) {\n        var phrases = this.props.phrases;\n\n        if (nextProps.phrases !== phrases) {\n          this.keyboardShortcuts = getKeyboardShortcuts(nextProps.phrases);\n        }\n      }\n\n      return componentWillReceiveProps;\n    }()\n  }, {\n    key: 'componentDidUpdate',\n    value: function () {\n      function componentDidUpdate() {\n        this.handleFocus();\n      }\n\n      return componentDidUpdate;\n    }()\n  }, {\n    key: 'onKeyDown',\n    value: function () {\n      function onKeyDown(e) {\n        e.stopPropagation();\n        var closeKeyboardShortcutsPanel = this.props.closeKeyboardShortcutsPanel; // Because the close button is the only focusable element inside of the panel, this\n        // amounts to a very basic focus trap. The user can exit the panel by \"pressing\" the\n        // close button or hitting escape\n\n        switch (e.key) {\n          case 'Enter':\n          case ' ':\n          case 'Spacebar': // for older browsers\n\n          case 'Escape':\n            closeKeyboardShortcutsPanel();\n            break;\n          // do nothing - this allows the up and down arrows continue their\n          // default behavior of scrolling the content of the Keyboard Shortcuts Panel\n          // which is needed when only a single month is shown for instance.\n\n          case 'ArrowUp':\n          case 'ArrowDown':\n            break;\n          // completely block the rest of the keys that have functionality outside of this panel\n\n          case 'Tab':\n          case 'Home':\n          case 'End':\n          case 'PageUp':\n          case 'PageDown':\n          case 'ArrowLeft':\n          case 'ArrowRight':\n            e.preventDefault();\n            break;\n\n          default:\n            break;\n        }\n      }\n\n      return onKeyDown;\n    }()\n  }, {\n    key: 'onShowKeyboardShortcutsButtonClick',\n    value: function () {\n      function onShowKeyboardShortcutsButtonClick() {\n        var _this2 = this;\n\n        var openKeyboardShortcutsPanel = this.props.openKeyboardShortcutsPanel; // we want to return focus to this button after closing the keyboard shortcuts panel\n\n        openKeyboardShortcutsPanel(function () {\n          _this2.showKeyboardShortcutsButton.focus();\n        });\n      }\n\n      return onShowKeyboardShortcutsButtonClick;\n    }()\n  }, {\n    key: 'setShowKeyboardShortcutsButtonRef',\n    value: function () {\n      function setShowKeyboardShortcutsButtonRef(ref) {\n        this.showKeyboardShortcutsButton = ref;\n      }\n\n      return setShowKeyboardShortcutsButtonRef;\n    }()\n  }, {\n    key: 'setHideKeyboardShortcutsButtonRef',\n    value: function () {\n      function setHideKeyboardShortcutsButtonRef(ref) {\n        this.hideKeyboardShortcutsButton = ref;\n      }\n\n      return setHideKeyboardShortcutsButtonRef;\n    }()\n  }, {\n    key: 'handleFocus',\n    value: function () {\n      function handleFocus() {\n        if (this.hideKeyboardShortcutsButton) {\n          // automatically move focus into the dialog by moving\n          // to the only interactive element, the hide button\n          this.hideKeyboardShortcutsButton.focus();\n        }\n      }\n\n      return handleFocus;\n    }()\n  }, {\n    key: 'render',\n    value: function () {\n      function render() {\n        var _this3 = this;\n\n        var _props = this.props,\n            block = _props.block,\n            buttonLocation = _props.buttonLocation,\n            showKeyboardShortcutsPanel = _props.showKeyboardShortcutsPanel,\n            closeKeyboardShortcutsPanel = _props.closeKeyboardShortcutsPanel,\n            styles = _props.styles,\n            phrases = _props.phrases;\n        var toggleButtonText = showKeyboardShortcutsPanel ? phrases.hideKeyboardShortcutsPanel : phrases.showKeyboardShortcutsPanel;\n        var bottomRight = buttonLocation === BOTTOM_RIGHT;\n        var topRight = buttonLocation === TOP_RIGHT;\n        var topLeft = buttonLocation === TOP_LEFT;\n        return _react2['default'].createElement('div', null, _react2['default'].createElement('button', _extends({\n          ref: this.setShowKeyboardShortcutsButtonRef\n        }, (0, _reactWithStyles.css)(styles.DayPickerKeyboardShortcuts_buttonReset, styles.DayPickerKeyboardShortcuts_show, bottomRight && styles.DayPickerKeyboardShortcuts_show__bottomRight, topRight && styles.DayPickerKeyboardShortcuts_show__topRight, topLeft && styles.DayPickerKeyboardShortcuts_show__topLeft), {\n          type: 'button',\n          'aria-label': toggleButtonText,\n          onClick: this.onShowKeyboardShortcutsButtonClick,\n          onKeyDown: function () {\n            function onKeyDown(e) {\n              if (e.key === 'Enter') {\n                e.preventDefault();\n              } else if (e.key === 'Space') {\n                _this3.onShowKeyboardShortcutsButtonClick(e);\n              }\n            }\n\n            return onKeyDown;\n          }(),\n          onMouseUp: function () {\n            function onMouseUp(e) {\n              e.currentTarget.blur();\n            }\n\n            return onMouseUp;\n          }()\n        }), _react2['default'].createElement('span', (0, _reactWithStyles.css)(styles.DayPickerKeyboardShortcuts_showSpan, bottomRight && styles.DayPickerKeyboardShortcuts_showSpan__bottomRight, topRight && styles.DayPickerKeyboardShortcuts_showSpan__topRight, topLeft && styles.DayPickerKeyboardShortcuts_showSpan__topLeft), '?')), showKeyboardShortcutsPanel && _react2['default'].createElement('div', _extends({}, (0, _reactWithStyles.css)(styles.DayPickerKeyboardShortcuts_panel), {\n          role: 'dialog',\n          'aria-labelledby': 'DayPickerKeyboardShortcuts_title',\n          'aria-describedby': 'DayPickerKeyboardShortcuts_description'\n        }), _react2['default'].createElement('div', _extends({}, (0, _reactWithStyles.css)(styles.DayPickerKeyboardShortcuts_title), {\n          id: 'DayPickerKeyboardShortcuts_title'\n        }), phrases.keyboardShortcuts), _react2['default'].createElement('button', _extends({\n          ref: this.setHideKeyboardShortcutsButtonRef\n        }, (0, _reactWithStyles.css)(styles.DayPickerKeyboardShortcuts_buttonReset, styles.DayPickerKeyboardShortcuts_close), {\n          type: 'button',\n          tabIndex: '0',\n          'aria-label': phrases.hideKeyboardShortcutsPanel,\n          onClick: closeKeyboardShortcutsPanel,\n          onKeyDown: this.onKeyDown\n        }), _react2['default'].createElement(_CloseButton2['default'], (0, _reactWithStyles.css)(styles.DayPickerKeyboardShortcuts_closeSvg))), _react2['default'].createElement('ul', _extends({}, (0, _reactWithStyles.css)(styles.DayPickerKeyboardShortcuts_list), {\n          id: 'DayPickerKeyboardShortcuts_description'\n        }), this.keyboardShortcuts.map(function (_ref2) {\n          var unicode = _ref2.unicode,\n              label = _ref2.label,\n              action = _ref2.action;\n          return _react2['default'].createElement(_KeyboardShortcutRow2['default'], {\n            key: label,\n            unicode: unicode,\n            label: label,\n            action: action,\n            block: block\n          });\n        }))));\n      }\n\n      return render;\n    }()\n  }]);\n\n  return DayPickerKeyboardShortcuts;\n}(_baseClass2['default']);\n\nDayPickerKeyboardShortcuts.propTypes = propTypes;\nDayPickerKeyboardShortcuts.defaultProps = defaultProps;\nexports['default'] = (0, _reactWithStyles.withStyles)(function (_ref3) {\n  var _ref3$reactDates = _ref3.reactDates,\n      color = _ref3$reactDates.color,\n      font = _ref3$reactDates.font,\n      zIndex = _ref3$reactDates.zIndex;\n  return {\n    DayPickerKeyboardShortcuts_buttonReset: {\n      background: 'none',\n      border: 0,\n      borderRadius: 0,\n      color: 'inherit',\n      font: 'inherit',\n      lineHeight: 'normal',\n      overflow: 'visible',\n      padding: 0,\n      cursor: 'pointer',\n      fontSize: font.size,\n      ':active': {\n        outline: 'none'\n      }\n    },\n    DayPickerKeyboardShortcuts_show: {\n      width: 22,\n      position: 'absolute',\n      zIndex: zIndex + 2\n    },\n    DayPickerKeyboardShortcuts_show__bottomRight: {\n      borderTop: '26px solid transparent',\n      borderRight: '33px solid ' + String(color.core.primary),\n      bottom: 0,\n      right: 0,\n      ':hover': {\n        borderRight: '33px solid ' + String(color.core.primary_dark)\n      }\n    },\n    DayPickerKeyboardShortcuts_show__topRight: {\n      borderBottom: '26px solid transparent',\n      borderRight: '33px solid ' + String(color.core.primary),\n      top: 0,\n      right: 0,\n      ':hover': {\n        borderRight: '33px solid ' + String(color.core.primary_dark)\n      }\n    },\n    DayPickerKeyboardShortcuts_show__topLeft: {\n      borderBottom: '26px solid transparent',\n      borderLeft: '33px solid ' + String(color.core.primary),\n      top: 0,\n      left: 0,\n      ':hover': {\n        borderLeft: '33px solid ' + String(color.core.primary_dark)\n      }\n    },\n    DayPickerKeyboardShortcuts_showSpan: {\n      color: color.core.white,\n      position: 'absolute'\n    },\n    DayPickerKeyboardShortcuts_showSpan__bottomRight: {\n      bottom: 0,\n      right: -28\n    },\n    DayPickerKeyboardShortcuts_showSpan__topRight: {\n      top: 1,\n      right: -28\n    },\n    DayPickerKeyboardShortcuts_showSpan__topLeft: {\n      top: 1,\n      left: -28\n    },\n    DayPickerKeyboardShortcuts_panel: {\n      overflow: 'auto',\n      background: color.background,\n      border: '1px solid ' + String(color.core.border),\n      borderRadius: 2,\n      position: 'absolute',\n      top: 0,\n      bottom: 0,\n      right: 0,\n      left: 0,\n      zIndex: zIndex + 2,\n      padding: 22,\n      margin: 33\n    },\n    DayPickerKeyboardShortcuts_title: {\n      fontSize: 16,\n      fontWeight: 'bold',\n      margin: 0\n    },\n    DayPickerKeyboardShortcuts_list: {\n      listStyle: 'none',\n      padding: 0,\n      fontSize: font.size\n    },\n    DayPickerKeyboardShortcuts_close: {\n      position: 'absolute',\n      right: 22,\n      top: 22,\n      zIndex: zIndex + 2,\n      ':active': {\n        outline: 'none'\n      }\n    },\n    DayPickerKeyboardShortcuts_closeSvg: {\n      height: 15,\n      width: 15,\n      fill: color.core.grayLighter,\n      ':hover': {\n        fill: color.core.grayLight\n      },\n      ':focus': {\n        fill: color.core.grayLight\n      }\n    }\n  };\n}, {\n  pureComponent: _baseClass.pureComponentAvailable\n})(DayPickerKeyboardShortcuts);","map":null,"metadata":{},"sourceType":"script"}