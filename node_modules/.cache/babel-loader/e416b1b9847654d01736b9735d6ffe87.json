{"ast":null,"code":"import _objectSpread from \"/Users/mac/Desktop/ReactTutorial/Projects/redux-project/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/Users/mac/Desktop/ReactTutorial/Projects/redux-project/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar defaultExpenses = [];\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultExpenses;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_EXPENSE':\n      return _toConsumableArray(state).concat([action.payload]);\n\n    case 'REMOVE_EXPENSE':\n      return state.filter(function (item) {\n        return item.id !== action.payload;\n      });\n\n    case 'EDIT_EXPENSE':\n      return state.map(function (item) {\n        if (item.id === action.id) {\n          return _objectSpread({}, item, action.model);\n        } else {\n          return item;\n        }\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/mac/Desktop/ReactTutorial/Projects/redux-project/src/reducers/expenses.js"],"names":["defaultExpenses","state","action","type","payload","filter","item","id","map","model"],"mappings":";;AAAA,IAAMA,eAAe,GAAG,EAAxB;AAEA,gBAAe,YAAqC;AAAA,MAApCC,KAAoC,uEAA5BD,eAA4B;AAAA,MAAXE,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,gCACKF,KADL,UAEEC,MAAM,CAACE,OAFT;;AAIF,SAAK,gBAAL;AACE,aAAOH,KAAK,CAACI,MAAN,CAAa,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAvB;AAAA,OAAjB,CAAP;;AACF,SAAK,cAAL;AACE,aAAOH,KAAK,CAACO,GAAN,CAAU,UAACF,IAAD,EAAU;AACzB,YAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACK,EAAvB,EAA2B;AACzB,mCAAYD,IAAZ,EAAqBJ,MAAM,CAACO,KAA5B;AACD,SAFD,MAGK;AACH,iBAAOH,IAAP;AACD;AACF,OAPM,CAAP;;AAQF;AACE,aAAOL,KAAP;AAlBJ;AAoBH,CArBD","sourcesContent":["const defaultExpenses = [];\n\nexport default (state = defaultExpenses, action) => {\n    switch (action.type) {\n      case 'ADD_EXPENSE':\n        return [\n          ...state,\n          action.payload\n        ];\n      case 'REMOVE_EXPENSE':\n        return state.filter(item => item.id !== action.payload);\n      case 'EDIT_EXPENSE':\n        return state.map((item) => {\n          if (item.id === action.id) {\n            return { ...item, ...action.model }\n          }\n          else {\n            return item;\n          }\n        })\n      default:\n        return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}