{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _object = require('object.assign');\n\nvar _object2 = _interopRequireDefault(_object);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactMomentProptypes = require('react-moment-proptypes');\n\nvar _reactMomentProptypes2 = _interopRequireDefault(_reactMomentProptypes);\n\nvar _airbnbPropTypes = require('airbnb-prop-types');\n\nvar _reactWithStyles = require('react-with-styles');\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _consolidatedEvents = require('consolidated-events');\n\nvar _defaultPhrases = require('../defaultPhrases');\n\nvar _getPhrasePropTypes = require('../utils/getPhrasePropTypes');\n\nvar _getPhrasePropTypes2 = _interopRequireDefault(_getPhrasePropTypes);\n\nvar _CalendarMonth = require('./CalendarMonth');\n\nvar _CalendarMonth2 = _interopRequireDefault(_CalendarMonth);\n\nvar _isTransitionEndSupported = require('../utils/isTransitionEndSupported');\n\nvar _isTransitionEndSupported2 = _interopRequireDefault(_isTransitionEndSupported);\n\nvar _getTransformStyles = require('../utils/getTransformStyles');\n\nvar _getTransformStyles2 = _interopRequireDefault(_getTransformStyles);\n\nvar _getCalendarMonthWidth = require('../utils/getCalendarMonthWidth');\n\nvar _getCalendarMonthWidth2 = _interopRequireDefault(_getCalendarMonthWidth);\n\nvar _toISOMonthString = require('../utils/toISOMonthString');\n\nvar _toISOMonthString2 = _interopRequireDefault(_toISOMonthString);\n\nvar _isPrevMonth = require('../utils/isPrevMonth');\n\nvar _isPrevMonth2 = _interopRequireDefault(_isPrevMonth);\n\nvar _isNextMonth = require('../utils/isNextMonth');\n\nvar _isNextMonth2 = _interopRequireDefault(_isNextMonth);\n\nvar _ModifiersShape = require('../shapes/ModifiersShape');\n\nvar _ModifiersShape2 = _interopRequireDefault(_ModifiersShape);\n\nvar _ScrollableOrientationShape = require('../shapes/ScrollableOrientationShape');\n\nvar _ScrollableOrientationShape2 = _interopRequireDefault(_ScrollableOrientationShape);\n\nvar _DayOfWeekShape = require('../shapes/DayOfWeekShape');\n\nvar _DayOfWeekShape2 = _interopRequireDefault(_DayOfWeekShape);\n\nvar _baseClass = require('../utils/baseClass');\n\nvar _baseClass2 = _interopRequireDefault(_baseClass);\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypes = (0, _airbnbPropTypes.forbidExtraProps)((0, _object2['default'])({}, _reactWithStyles.withStylesPropTypes, {\n  enableOutsideDays: _propTypes2['default'].bool,\n  firstVisibleMonthIndex: _propTypes2['default'].number,\n  horizontalMonthPadding: _airbnbPropTypes.nonNegativeInteger,\n  initialMonth: _reactMomentProptypes2['default'].momentObj,\n  isAnimating: _propTypes2['default'].bool,\n  numberOfMonths: _propTypes2['default'].number,\n  modifiers: _propTypes2['default'].objectOf(_propTypes2['default'].objectOf(_ModifiersShape2['default'])),\n  orientation: _ScrollableOrientationShape2['default'],\n  onDayClick: _propTypes2['default'].func,\n  onDayMouseEnter: _propTypes2['default'].func,\n  onDayMouseLeave: _propTypes2['default'].func,\n  onMonthTransitionEnd: _propTypes2['default'].func,\n  onMonthChange: _propTypes2['default'].func,\n  onYearChange: _propTypes2['default'].func,\n  renderMonthText: (0, _airbnbPropTypes.mutuallyExclusiveProps)(_propTypes2['default'].func, 'renderMonthText', 'renderMonthElement'),\n  renderCalendarDay: _propTypes2['default'].func,\n  renderDayContents: _propTypes2['default'].func,\n  translationValue: _propTypes2['default'].number,\n  renderMonthElement: (0, _airbnbPropTypes.mutuallyExclusiveProps)(_propTypes2['default'].func, 'renderMonthText', 'renderMonthElement'),\n  daySize: _airbnbPropTypes.nonNegativeInteger,\n  focusedDate: _reactMomentProptypes2['default'].momentObj,\n  // indicates focusable day\n  isFocused: _propTypes2['default'].bool,\n  // indicates whether or not to move focus to focusable day\n  firstDayOfWeek: _DayOfWeekShape2['default'],\n  setMonthTitleHeight: _propTypes2['default'].func,\n  isRTL: _propTypes2['default'].bool,\n  transitionDuration: _airbnbPropTypes.nonNegativeInteger,\n  verticalBorderSpacing: _airbnbPropTypes.nonNegativeInteger,\n  // i18n\n  monthFormat: _propTypes2['default'].string,\n  phrases: _propTypes2['default'].shape((0, _getPhrasePropTypes2['default'])(_defaultPhrases.CalendarDayPhrases)),\n  dayAriaLabelFormat: _propTypes2['default'].string\n}));\nvar defaultProps = {\n  enableOutsideDays: false,\n  firstVisibleMonthIndex: 0,\n  horizontalMonthPadding: 13,\n  initialMonth: (0, _moment2['default'])(),\n  isAnimating: false,\n  numberOfMonths: 1,\n  modifiers: {},\n  orientation: _constants.HORIZONTAL_ORIENTATION,\n  onDayClick: function () {\n    function onDayClick() {}\n\n    return onDayClick;\n  }(),\n  onDayMouseEnter: function () {\n    function onDayMouseEnter() {}\n\n    return onDayMouseEnter;\n  }(),\n  onDayMouseLeave: function () {\n    function onDayMouseLeave() {}\n\n    return onDayMouseLeave;\n  }(),\n  onMonthChange: function () {\n    function onMonthChange() {}\n\n    return onMonthChange;\n  }(),\n  onYearChange: function () {\n    function onYearChange() {}\n\n    return onYearChange;\n  }(),\n  onMonthTransitionEnd: function () {\n    function onMonthTransitionEnd() {}\n\n    return onMonthTransitionEnd;\n  }(),\n  renderMonthText: null,\n  renderCalendarDay: undefined,\n  renderDayContents: null,\n  translationValue: null,\n  renderMonthElement: null,\n  daySize: _constants.DAY_SIZE,\n  focusedDate: null,\n  isFocused: false,\n  firstDayOfWeek: null,\n  setMonthTitleHeight: null,\n  isRTL: false,\n  transitionDuration: 200,\n  verticalBorderSpacing: undefined,\n  // i18n\n  monthFormat: 'MMMM YYYY',\n  // english locale\n  phrases: _defaultPhrases.CalendarDayPhrases,\n  dayAriaLabelFormat: undefined\n};\n\nfunction getMonths(initialMonth, numberOfMonths, withoutTransitionMonths) {\n  var month = initialMonth.clone();\n  if (!withoutTransitionMonths) month = month.subtract(1, 'month');\n  var months = [];\n\n  for (var i = 0; i < (withoutTransitionMonths ? numberOfMonths : numberOfMonths + 2); i += 1) {\n    months.push(month);\n    month = month.clone().add(1, 'month');\n  }\n\n  return months;\n}\n/** @extends React.Component */\n\n\nvar CalendarMonthGrid = function (_BaseClass) {\n  _inherits(CalendarMonthGrid, _BaseClass);\n\n  function CalendarMonthGrid(props) {\n    _classCallCheck(this, CalendarMonthGrid);\n\n    var _this = _possibleConstructorReturn(this, (CalendarMonthGrid.__proto__ || Object.getPrototypeOf(CalendarMonthGrid)).call(this, props));\n\n    var withoutTransitionMonths = props.orientation === _constants.VERTICAL_SCROLLABLE;\n    _this.state = {\n      months: getMonths(props.initialMonth, props.numberOfMonths, withoutTransitionMonths)\n    };\n    _this.isTransitionEndSupported = (0, _isTransitionEndSupported2['default'])();\n    _this.onTransitionEnd = _this.onTransitionEnd.bind(_this);\n    _this.setContainerRef = _this.setContainerRef.bind(_this);\n    _this.locale = _moment2['default'].locale();\n    _this.onMonthSelect = _this.onMonthSelect.bind(_this);\n    _this.onYearSelect = _this.onYearSelect.bind(_this);\n    return _this;\n  }\n\n  _createClass(CalendarMonthGrid, [{\n    key: 'componentDidMount',\n    value: function () {\n      function componentDidMount() {\n        this.removeEventListener = (0, _consolidatedEvents.addEventListener)(this.container, 'transitionend', this.onTransitionEnd);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function () {\n      function componentWillReceiveProps(nextProps) {\n        var _this2 = this;\n\n        var initialMonth = nextProps.initialMonth,\n            numberOfMonths = nextProps.numberOfMonths,\n            orientation = nextProps.orientation;\n        var months = this.state.months;\n        var _props = this.props,\n            prevInitialMonth = _props.initialMonth,\n            prevNumberOfMonths = _props.numberOfMonths;\n        var hasMonthChanged = !prevInitialMonth.isSame(initialMonth, 'month');\n        var hasNumberOfMonthsChanged = prevNumberOfMonths !== numberOfMonths;\n        var newMonths = months;\n\n        if (hasMonthChanged && !hasNumberOfMonthsChanged) {\n          if ((0, _isNextMonth2['default'])(prevInitialMonth, initialMonth)) {\n            newMonths = months.slice(1);\n            newMonths.push(months[months.length - 1].clone().add(1, 'month'));\n          } else if ((0, _isPrevMonth2['default'])(prevInitialMonth, initialMonth)) {\n            newMonths = months.slice(0, months.length - 1);\n            newMonths.unshift(months[0].clone().subtract(1, 'month'));\n          } else {\n            var withoutTransitionMonths = orientation === _constants.VERTICAL_SCROLLABLE;\n            newMonths = getMonths(initialMonth, numberOfMonths, withoutTransitionMonths);\n          }\n        }\n\n        if (hasNumberOfMonthsChanged) {\n          var _withoutTransitionMonths = orientation === _constants.VERTICAL_SCROLLABLE;\n\n          newMonths = getMonths(initialMonth, numberOfMonths, _withoutTransitionMonths);\n        }\n\n        var momentLocale = _moment2['default'].locale();\n\n        if (this.locale !== momentLocale) {\n          this.locale = momentLocale;\n          newMonths = newMonths.map(function (m) {\n            return m.locale(_this2.locale);\n          });\n        }\n\n        this.setState({\n          months: newMonths\n        });\n      }\n\n      return componentWillReceiveProps;\n    }()\n  }, {\n    key: 'componentDidUpdate',\n    value: function () {\n      function componentDidUpdate() {\n        var _props2 = this.props,\n            isAnimating = _props2.isAnimating,\n            transitionDuration = _props2.transitionDuration,\n            onMonthTransitionEnd = _props2.onMonthTransitionEnd; // For IE9, immediately call onMonthTransitionEnd instead of\n        // waiting for the animation to complete. Similarly, if transitionDuration\n        // is set to 0, also immediately invoke the onMonthTransitionEnd callback\n\n        if ((!this.isTransitionEndSupported || !transitionDuration) && isAnimating) {\n          onMonthTransitionEnd();\n        }\n      }\n\n      return componentDidUpdate;\n    }()\n  }, {\n    key: 'componentWillUnmount',\n    value: function () {\n      function componentWillUnmount() {\n        if (this.removeEventListener) this.removeEventListener();\n      }\n\n      return componentWillUnmount;\n    }()\n  }, {\n    key: 'onTransitionEnd',\n    value: function () {\n      function onTransitionEnd() {\n        var onMonthTransitionEnd = this.props.onMonthTransitionEnd;\n        onMonthTransitionEnd();\n      }\n\n      return onTransitionEnd;\n    }()\n  }, {\n    key: 'onMonthSelect',\n    value: function () {\n      function onMonthSelect(currentMonth, newMonthVal) {\n        var newMonth = currentMonth.clone();\n        var _props3 = this.props,\n            onMonthChange = _props3.onMonthChange,\n            orientation = _props3.orientation;\n        var months = this.state.months;\n        var withoutTransitionMonths = orientation === _constants.VERTICAL_SCROLLABLE;\n        var initialMonthSubtraction = months.indexOf(currentMonth);\n\n        if (!withoutTransitionMonths) {\n          initialMonthSubtraction -= 1;\n        }\n\n        newMonth.set('month', newMonthVal).subtract(initialMonthSubtraction, 'months');\n        onMonthChange(newMonth);\n      }\n\n      return onMonthSelect;\n    }()\n  }, {\n    key: 'onYearSelect',\n    value: function () {\n      function onYearSelect(currentMonth, newYearVal) {\n        var newMonth = currentMonth.clone();\n        var _props4 = this.props,\n            onYearChange = _props4.onYearChange,\n            orientation = _props4.orientation;\n        var months = this.state.months;\n        var withoutTransitionMonths = orientation === _constants.VERTICAL_SCROLLABLE;\n        var initialMonthSubtraction = months.indexOf(currentMonth);\n\n        if (!withoutTransitionMonths) {\n          initialMonthSubtraction -= 1;\n        }\n\n        newMonth.set('year', newYearVal).subtract(initialMonthSubtraction, 'months');\n        onYearChange(newMonth);\n      }\n\n      return onYearSelect;\n    }()\n  }, {\n    key: 'setContainerRef',\n    value: function () {\n      function setContainerRef(ref) {\n        this.container = ref;\n      }\n\n      return setContainerRef;\n    }()\n  }, {\n    key: 'render',\n    value: function () {\n      function render() {\n        var _this3 = this;\n\n        var _props5 = this.props,\n            enableOutsideDays = _props5.enableOutsideDays,\n            firstVisibleMonthIndex = _props5.firstVisibleMonthIndex,\n            horizontalMonthPadding = _props5.horizontalMonthPadding,\n            isAnimating = _props5.isAnimating,\n            modifiers = _props5.modifiers,\n            numberOfMonths = _props5.numberOfMonths,\n            monthFormat = _props5.monthFormat,\n            orientation = _props5.orientation,\n            translationValue = _props5.translationValue,\n            daySize = _props5.daySize,\n            onDayMouseEnter = _props5.onDayMouseEnter,\n            onDayMouseLeave = _props5.onDayMouseLeave,\n            onDayClick = _props5.onDayClick,\n            renderMonthText = _props5.renderMonthText,\n            renderCalendarDay = _props5.renderCalendarDay,\n            renderDayContents = _props5.renderDayContents,\n            renderMonthElement = _props5.renderMonthElement,\n            onMonthTransitionEnd = _props5.onMonthTransitionEnd,\n            firstDayOfWeek = _props5.firstDayOfWeek,\n            focusedDate = _props5.focusedDate,\n            isFocused = _props5.isFocused,\n            isRTL = _props5.isRTL,\n            styles = _props5.styles,\n            phrases = _props5.phrases,\n            dayAriaLabelFormat = _props5.dayAriaLabelFormat,\n            transitionDuration = _props5.transitionDuration,\n            verticalBorderSpacing = _props5.verticalBorderSpacing,\n            setMonthTitleHeight = _props5.setMonthTitleHeight;\n        var months = this.state.months;\n        var isVertical = orientation === _constants.VERTICAL_ORIENTATION;\n        var isVerticalScrollable = orientation === _constants.VERTICAL_SCROLLABLE;\n        var isHorizontal = orientation === _constants.HORIZONTAL_ORIENTATION;\n        var calendarMonthWidth = (0, _getCalendarMonthWidth2['default'])(daySize, horizontalMonthPadding);\n        var width = isVertical || isVerticalScrollable ? calendarMonthWidth : (numberOfMonths + 2) * calendarMonthWidth;\n        var transformType = isVertical || isVerticalScrollable ? 'translateY' : 'translateX';\n        var transformValue = transformType + '(' + String(translationValue) + 'px)';\n        return _react2['default'].createElement('div', _extends({}, (0, _reactWithStyles.css)(styles.CalendarMonthGrid, isHorizontal && styles.CalendarMonthGrid__horizontal, isVertical && styles.CalendarMonthGrid__vertical, isVerticalScrollable && styles.CalendarMonthGrid__vertical_scrollable, isAnimating && styles.CalendarMonthGrid__animating, isAnimating && transitionDuration && {\n          transition: 'transform ' + String(transitionDuration) + 'ms ease-in-out'\n        }, (0, _object2['default'])({}, (0, _getTransformStyles2['default'])(transformValue), {\n          width: width\n        })), {\n          ref: this.setContainerRef,\n          onTransitionEnd: onMonthTransitionEnd\n        }), months.map(function (month, i) {\n          var isVisible = i >= firstVisibleMonthIndex && i < firstVisibleMonthIndex + numberOfMonths;\n          var hideForAnimation = i === 0 && !isVisible;\n          var showForAnimation = i === 0 && isAnimating && isVisible;\n          var monthString = (0, _toISOMonthString2['default'])(month);\n          return _react2['default'].createElement('div', _extends({\n            key: monthString\n          }, (0, _reactWithStyles.css)(isHorizontal && styles.CalendarMonthGrid_month__horizontal, hideForAnimation && styles.CalendarMonthGrid_month__hideForAnimation, showForAnimation && !isVertical && !isRTL && {\n            position: 'absolute',\n            left: -calendarMonthWidth\n          }, showForAnimation && !isVertical && isRTL && {\n            position: 'absolute',\n            right: 0\n          }, showForAnimation && isVertical && {\n            position: 'absolute',\n            top: -translationValue\n          }, !isVisible && !isAnimating && styles.CalendarMonthGrid_month__hidden)), _react2['default'].createElement(_CalendarMonth2['default'], {\n            month: month,\n            isVisible: isVisible,\n            enableOutsideDays: enableOutsideDays,\n            modifiers: modifiers[monthString],\n            monthFormat: monthFormat,\n            orientation: orientation,\n            onDayMouseEnter: onDayMouseEnter,\n            onDayMouseLeave: onDayMouseLeave,\n            onDayClick: onDayClick,\n            onMonthSelect: _this3.onMonthSelect,\n            onYearSelect: _this3.onYearSelect,\n            renderMonthText: renderMonthText,\n            renderCalendarDay: renderCalendarDay,\n            renderDayContents: renderDayContents,\n            renderMonthElement: renderMonthElement,\n            firstDayOfWeek: firstDayOfWeek,\n            daySize: daySize,\n            focusedDate: isVisible ? focusedDate : null,\n            isFocused: isFocused,\n            phrases: phrases,\n            setMonthTitleHeight: setMonthTitleHeight,\n            dayAriaLabelFormat: dayAriaLabelFormat,\n            verticalBorderSpacing: verticalBorderSpacing,\n            horizontalMonthPadding: horizontalMonthPadding\n          }));\n        }));\n      }\n\n      return render;\n    }()\n  }]);\n\n  return CalendarMonthGrid;\n}(_baseClass2['default']);\n\nCalendarMonthGrid.propTypes = propTypes;\nCalendarMonthGrid.defaultProps = defaultProps;\nexports['default'] = (0, _reactWithStyles.withStyles)(function (_ref) {\n  var _ref$reactDates = _ref.reactDates,\n      color = _ref$reactDates.color,\n      noScrollBarOnVerticalScrollable = _ref$reactDates.noScrollBarOnVerticalScrollable,\n      spacing = _ref$reactDates.spacing,\n      zIndex = _ref$reactDates.zIndex;\n  return {\n    CalendarMonthGrid: {\n      background: color.background,\n      textAlign: 'left',\n      zIndex: zIndex\n    },\n    CalendarMonthGrid__animating: {\n      zIndex: zIndex + 1\n    },\n    CalendarMonthGrid__horizontal: {\n      position: 'absolute',\n      left: spacing.dayPickerHorizontalPadding\n    },\n    CalendarMonthGrid__vertical: {\n      margin: '0 auto'\n    },\n    CalendarMonthGrid__vertical_scrollable: (0, _object2['default'])({\n      margin: '0 auto',\n      overflowY: 'scroll'\n    }, noScrollBarOnVerticalScrollable && {\n      '-webkitOverflowScrolling': 'touch',\n      '::-webkit-scrollbar': {\n        '-webkit-appearance': 'none',\n        display: 'none'\n      }\n    }),\n    CalendarMonthGrid_month__horizontal: {\n      display: 'inline-block',\n      verticalAlign: 'top',\n      minHeight: '100%'\n    },\n    CalendarMonthGrid_month__hideForAnimation: {\n      position: 'absolute',\n      zIndex: zIndex - 1,\n      opacity: 0,\n      pointerEvents: 'none'\n    },\n    CalendarMonthGrid_month__hidden: {\n      visibility: 'hidden'\n    }\n  };\n}, {\n  pureComponent: _baseClass.pureComponentAvailable\n})(CalendarMonthGrid);","map":null,"metadata":{},"sourceType":"script"}