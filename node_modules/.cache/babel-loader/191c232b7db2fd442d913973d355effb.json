{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _object = require('object.assign');\n\nvar _object2 = _interopRequireDefault(_object);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _airbnbPropTypes = require('airbnb-prop-types');\n\nvar _reactWithStyles = require('react-with-styles');\n\nvar _defaultPhrases = require('../defaultPhrases');\n\nvar _getPhrasePropTypes = require('../utils/getPhrasePropTypes');\n\nvar _getPhrasePropTypes2 = _interopRequireDefault(_getPhrasePropTypes);\n\nvar _OpenDirectionShape = require('../shapes/OpenDirectionShape');\n\nvar _OpenDirectionShape2 = _interopRequireDefault(_OpenDirectionShape);\n\nvar _DateInput = require('./DateInput');\n\nvar _DateInput2 = _interopRequireDefault(_DateInput);\n\nvar _IconPositionShape = require('../shapes/IconPositionShape');\n\nvar _IconPositionShape2 = _interopRequireDefault(_IconPositionShape);\n\nvar _DisabledShape = require('../shapes/DisabledShape');\n\nvar _DisabledShape2 = _interopRequireDefault(_DisabledShape);\n\nvar _baseClass = require('../utils/baseClass');\n\nvar _RightArrow = require('./RightArrow');\n\nvar _RightArrow2 = _interopRequireDefault(_RightArrow);\n\nvar _LeftArrow = require('./LeftArrow');\n\nvar _LeftArrow2 = _interopRequireDefault(_LeftArrow);\n\nvar _CloseButton = require('./CloseButton');\n\nvar _CloseButton2 = _interopRequireDefault(_CloseButton);\n\nvar _CalendarIcon = require('./CalendarIcon');\n\nvar _CalendarIcon2 = _interopRequireDefault(_CalendarIcon);\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar propTypes = process.env.NODE_ENV !== \"production\" ? (0, _airbnbPropTypes.forbidExtraProps)((0, _object2['default'])({}, _reactWithStyles.withStylesPropTypes, {\n  startDateId: _propTypes2['default'].string,\n  startDatePlaceholderText: _propTypes2['default'].string,\n  screenReaderMessage: _propTypes2['default'].string,\n  endDateId: _propTypes2['default'].string,\n  endDatePlaceholderText: _propTypes2['default'].string,\n  onStartDateFocus: _propTypes2['default'].func,\n  onEndDateFocus: _propTypes2['default'].func,\n  onStartDateChange: _propTypes2['default'].func,\n  onEndDateChange: _propTypes2['default'].func,\n  onStartDateShiftTab: _propTypes2['default'].func,\n  onEndDateTab: _propTypes2['default'].func,\n  onClearDates: _propTypes2['default'].func,\n  onKeyDownArrowDown: _propTypes2['default'].func,\n  onKeyDownQuestionMark: _propTypes2['default'].func,\n  startDate: _propTypes2['default'].string,\n  endDate: _propTypes2['default'].string,\n  isStartDateFocused: _propTypes2['default'].bool,\n  isEndDateFocused: _propTypes2['default'].bool,\n  showClearDates: _propTypes2['default'].bool,\n  disabled: _DisabledShape2['default'],\n  required: _propTypes2['default'].bool,\n  readOnly: _propTypes2['default'].bool,\n  openDirection: _OpenDirectionShape2['default'],\n  showCaret: _propTypes2['default'].bool,\n  showDefaultInputIcon: _propTypes2['default'].bool,\n  inputIconPosition: _IconPositionShape2['default'],\n  customInputIcon: _propTypes2['default'].node,\n  customArrowIcon: _propTypes2['default'].node,\n  customCloseIcon: _propTypes2['default'].node,\n  noBorder: _propTypes2['default'].bool,\n  block: _propTypes2['default'].bool,\n  small: _propTypes2['default'].bool,\n  regular: _propTypes2['default'].bool,\n  verticalSpacing: _airbnbPropTypes.nonNegativeInteger,\n  // accessibility\n  isFocused: _propTypes2['default'].bool,\n  // describes actual DOM focus\n  // i18n\n  phrases: _propTypes2['default'].shape((0, _getPhrasePropTypes2['default'])(_defaultPhrases.DateRangePickerInputPhrases)),\n  isRTL: _propTypes2['default'].bool\n})) : {};\n;\nvar defaultProps = {\n  startDateId: _constants.START_DATE,\n  endDateId: _constants.END_DATE,\n  startDatePlaceholderText: 'Start Date',\n  endDatePlaceholderText: 'End Date',\n  screenReaderMessage: '',\n  onStartDateFocus: function () {\n    function onStartDateFocus() {}\n\n    return onStartDateFocus;\n  }(),\n  onEndDateFocus: function () {\n    function onEndDateFocus() {}\n\n    return onEndDateFocus;\n  }(),\n  onStartDateChange: function () {\n    function onStartDateChange() {}\n\n    return onStartDateChange;\n  }(),\n  onEndDateChange: function () {\n    function onEndDateChange() {}\n\n    return onEndDateChange;\n  }(),\n  onStartDateShiftTab: function () {\n    function onStartDateShiftTab() {}\n\n    return onStartDateShiftTab;\n  }(),\n  onEndDateTab: function () {\n    function onEndDateTab() {}\n\n    return onEndDateTab;\n  }(),\n  onClearDates: function () {\n    function onClearDates() {}\n\n    return onClearDates;\n  }(),\n  onKeyDownArrowDown: function () {\n    function onKeyDownArrowDown() {}\n\n    return onKeyDownArrowDown;\n  }(),\n  onKeyDownQuestionMark: function () {\n    function onKeyDownQuestionMark() {}\n\n    return onKeyDownQuestionMark;\n  }(),\n  startDate: '',\n  endDate: '',\n  isStartDateFocused: false,\n  isEndDateFocused: false,\n  showClearDates: false,\n  disabled: false,\n  required: false,\n  readOnly: false,\n  openDirection: _constants.OPEN_DOWN,\n  showCaret: false,\n  showDefaultInputIcon: false,\n  inputIconPosition: _constants.ICON_BEFORE_POSITION,\n  customInputIcon: null,\n  customArrowIcon: null,\n  customCloseIcon: null,\n  noBorder: false,\n  block: false,\n  small: false,\n  regular: false,\n  verticalSpacing: undefined,\n  // accessibility\n  isFocused: false,\n  // i18n\n  phrases: _defaultPhrases.DateRangePickerInputPhrases,\n  isRTL: false\n};\n\nfunction DateRangePickerInput(_ref) {\n  var startDate = _ref.startDate,\n      startDateId = _ref.startDateId,\n      startDatePlaceholderText = _ref.startDatePlaceholderText,\n      screenReaderMessage = _ref.screenReaderMessage,\n      isStartDateFocused = _ref.isStartDateFocused,\n      onStartDateChange = _ref.onStartDateChange,\n      onStartDateFocus = _ref.onStartDateFocus,\n      onStartDateShiftTab = _ref.onStartDateShiftTab,\n      endDate = _ref.endDate,\n      endDateId = _ref.endDateId,\n      endDatePlaceholderText = _ref.endDatePlaceholderText,\n      isEndDateFocused = _ref.isEndDateFocused,\n      onEndDateChange = _ref.onEndDateChange,\n      onEndDateFocus = _ref.onEndDateFocus,\n      onEndDateTab = _ref.onEndDateTab,\n      onKeyDownArrowDown = _ref.onKeyDownArrowDown,\n      onKeyDownQuestionMark = _ref.onKeyDownQuestionMark,\n      onClearDates = _ref.onClearDates,\n      showClearDates = _ref.showClearDates,\n      disabled = _ref.disabled,\n      required = _ref.required,\n      readOnly = _ref.readOnly,\n      showCaret = _ref.showCaret,\n      openDirection = _ref.openDirection,\n      showDefaultInputIcon = _ref.showDefaultInputIcon,\n      inputIconPosition = _ref.inputIconPosition,\n      customInputIcon = _ref.customInputIcon,\n      customArrowIcon = _ref.customArrowIcon,\n      customCloseIcon = _ref.customCloseIcon,\n      isFocused = _ref.isFocused,\n      phrases = _ref.phrases,\n      isRTL = _ref.isRTL,\n      noBorder = _ref.noBorder,\n      block = _ref.block,\n      verticalSpacing = _ref.verticalSpacing,\n      small = _ref.small,\n      regular = _ref.regular,\n      styles = _ref.styles;\n\n  var calendarIcon = customInputIcon || _react2['default'].createElement(_CalendarIcon2['default'], (0, _reactWithStyles.css)(styles.DateRangePickerInput_calendarIcon_svg));\n\n  var arrowIcon = customArrowIcon || _react2['default'].createElement(_RightArrow2['default'], (0, _reactWithStyles.css)(styles.DateRangePickerInput_arrow_svg));\n\n  if (isRTL) arrowIcon = _react2['default'].createElement(_LeftArrow2['default'], (0, _reactWithStyles.css)(styles.DateRangePickerInput_arrow_svg));\n  if (small) arrowIcon = '-';\n\n  var closeIcon = customCloseIcon || _react2['default'].createElement(_CloseButton2['default'], (0, _reactWithStyles.css)(styles.DateRangePickerInput_clearDates_svg, small && styles.DateRangePickerInput_clearDates_svg__small));\n\n  var screenReaderText = screenReaderMessage || phrases.keyboardNavigationInstructions;\n\n  var inputIcon = (showDefaultInputIcon || customInputIcon !== null) && _react2['default'].createElement('button', _extends({}, (0, _reactWithStyles.css)(styles.DateRangePickerInput_calendarIcon), {\n    type: 'button',\n    disabled: disabled,\n    'aria-label': phrases.focusStartDate,\n    onClick: onKeyDownArrowDown\n  }), calendarIcon);\n\n  var startDateDisabled = disabled === _constants.START_DATE || disabled === true;\n  var endDateDisabled = disabled === _constants.END_DATE || disabled === true;\n  return _react2['default'].createElement('div', (0, _reactWithStyles.css)(styles.DateRangePickerInput, disabled && styles.DateRangePickerInput__disabled, isRTL && styles.DateRangePickerInput__rtl, !noBorder && styles.DateRangePickerInput__withBorder, block && styles.DateRangePickerInput__block, showClearDates && styles.DateRangePickerInput__showClearDates), inputIconPosition === _constants.ICON_BEFORE_POSITION && inputIcon, _react2['default'].createElement(_DateInput2['default'], {\n    id: startDateId,\n    placeholder: startDatePlaceholderText,\n    displayValue: startDate,\n    screenReaderMessage: screenReaderText,\n    focused: isStartDateFocused,\n    isFocused: isFocused,\n    disabled: startDateDisabled,\n    required: required,\n    readOnly: readOnly,\n    showCaret: showCaret,\n    openDirection: openDirection,\n    onChange: onStartDateChange,\n    onFocus: onStartDateFocus,\n    onKeyDownShiftTab: onStartDateShiftTab,\n    onKeyDownArrowDown: onKeyDownArrowDown,\n    onKeyDownQuestionMark: onKeyDownQuestionMark,\n    verticalSpacing: verticalSpacing,\n    small: small,\n    regular: regular\n  }), _react2['default'].createElement('div', _extends({}, (0, _reactWithStyles.css)(styles.DateRangePickerInput_arrow), {\n    'aria-hidden': 'true',\n    role: 'presentation'\n  }), arrowIcon), _react2['default'].createElement(_DateInput2['default'], {\n    id: endDateId,\n    placeholder: endDatePlaceholderText,\n    displayValue: endDate,\n    screenReaderMessage: screenReaderText,\n    focused: isEndDateFocused,\n    isFocused: isFocused,\n    disabled: endDateDisabled,\n    required: required,\n    readOnly: readOnly,\n    showCaret: showCaret,\n    openDirection: openDirection,\n    onChange: onEndDateChange,\n    onFocus: onEndDateFocus,\n    onKeyDownTab: onEndDateTab,\n    onKeyDownArrowDown: onKeyDownArrowDown,\n    onKeyDownQuestionMark: onKeyDownQuestionMark,\n    verticalSpacing: verticalSpacing,\n    small: small,\n    regular: regular\n  }), showClearDates && _react2['default'].createElement('button', _extends({\n    type: 'button',\n    'aria-label': phrases.clearDates\n  }, (0, _reactWithStyles.css)(styles.DateRangePickerInput_clearDates, small && styles.DateRangePickerInput_clearDates__small, !customCloseIcon && styles.DateRangePickerInput_clearDates_default, !(startDate || endDate) && styles.DateRangePickerInput_clearDates__hide), {\n    onClick: onClearDates,\n    disabled: disabled\n  }), closeIcon), inputIconPosition === _constants.ICON_AFTER_POSITION && inputIcon);\n}\n\nDateRangePickerInput.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nDateRangePickerInput.defaultProps = defaultProps;\nexports['default'] = (0, _reactWithStyles.withStyles)(function (_ref2) {\n  var _ref2$reactDates = _ref2.reactDates,\n      border = _ref2$reactDates.border,\n      color = _ref2$reactDates.color,\n      sizing = _ref2$reactDates.sizing;\n  return {\n    DateRangePickerInput: {\n      backgroundColor: color.background,\n      display: 'inline-block'\n    },\n    DateRangePickerInput__disabled: {\n      background: color.disabled\n    },\n    DateRangePickerInput__withBorder: {\n      borderColor: color.border,\n      borderWidth: border.pickerInput.borderWidth,\n      borderStyle: border.pickerInput.borderStyle,\n      borderRadius: border.pickerInput.borderRadius\n    },\n    DateRangePickerInput__rtl: {\n      direction: 'rtl'\n    },\n    DateRangePickerInput__block: {\n      display: 'block'\n    },\n    DateRangePickerInput__showClearDates: {\n      paddingRight: 30\n    },\n    DateRangePickerInput_arrow: {\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      color: color.text\n    },\n    DateRangePickerInput_arrow_svg: {\n      verticalAlign: 'middle',\n      fill: color.text,\n      height: sizing.arrowWidth,\n      width: sizing.arrowWidth\n    },\n    DateRangePickerInput_clearDates: {\n      background: 'none',\n      border: 0,\n      color: 'inherit',\n      font: 'inherit',\n      lineHeight: 'normal',\n      overflow: 'visible',\n      cursor: 'pointer',\n      padding: 10,\n      margin: '0 10px 0 5px',\n      position: 'absolute',\n      right: 0,\n      top: '50%',\n      transform: 'translateY(-50%)'\n    },\n    DateRangePickerInput_clearDates__small: {\n      padding: 6\n    },\n    DateRangePickerInput_clearDates_default: {\n      ':focus': {\n        background: color.core.border,\n        borderRadius: '50%'\n      },\n      ':hover': {\n        background: color.core.border,\n        borderRadius: '50%'\n      }\n    },\n    DateRangePickerInput_clearDates__hide: {\n      visibility: 'hidden'\n    },\n    DateRangePickerInput_clearDates_svg: {\n      fill: color.core.grayLight,\n      height: 12,\n      width: 15,\n      verticalAlign: 'middle'\n    },\n    DateRangePickerInput_clearDates_svg__small: {\n      height: 9\n    },\n    DateRangePickerInput_calendarIcon: {\n      background: 'none',\n      border: 0,\n      color: 'inherit',\n      font: 'inherit',\n      lineHeight: 'normal',\n      overflow: 'visible',\n      cursor: 'pointer',\n      display: 'inline-block',\n      verticalAlign: 'middle',\n      padding: 10,\n      margin: '0 5px 0 10px'\n    },\n    DateRangePickerInput_calendarIcon_svg: {\n      fill: color.core.grayLight,\n      height: 15,\n      width: 14,\n      verticalAlign: 'middle'\n    }\n  };\n}, {\n  pureComponent: _baseClass.pureComponentAvailable\n})(DateRangePickerInput);","map":null,"metadata":{},"sourceType":"script"}