{"ast":null,"code":"// import React from 'react';\n// import ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers } from 'redux';\n/*DEFAULT STATES*/\n\nvar defaultExpenses = [];\nvar defaultFilter = {\n  text: '',\n  sortBy: '',\n  startDate: undefined,\n  endDate: undefined\n};\nvar initialState = {\n  expenses: [{\n    id: 0,\n    description: 'January Rent',\n    note: 'This was the final payment of the rent',\n    amount: 1000,\n    createdAt: 0\n  }],\n  filters: {\n    text: 'rent',\n    sortBy: 'amount',\n    //Date or amount\n    startDate: undefined,\n    endDate: undefined\n  }\n};\n/*COMBINE ALL THE REDUCERS*/\n\nvar rootReducer = combineReducers({\n  expensesReducer: expensesReducer,\n  filterReducer: filterReducer\n});\n/*STORE CREATE*/\n\nvar store = createStore(rootReducer);\nstore.subscribe(function () {\n  var state = store.getState();\n  var filteredExpenses = getFilteredExpenses(state.expensesReducer, state.filterReducer);\n  console.log(filteredExpenses);\n});\nstore.dispatch(addExpense({\n  id: 0,\n  description: 'İLK REDUX',\n  note: 'THIS IS MY FIRST REDUX',\n  amount: 500,\n  createdAt: 1500\n}));\nstore.dispatch(addExpense({\n  id: 1,\n  description: 'İLK REDUXXX',\n  note: 'THIS IS MY FIRST REDUXXXXXX',\n  amount: 500,\n  createdAt: 2500\n}));\nstore.dispatch(addExpense({\n  id: 2,\n  description: 'İLK REDUXXX',\n  note: 'THIS IS MY FIRST REDUXXXXXX',\n  amount: 500,\n  createdAt: 0\n}));\nstore.dispatch(editExpense(2, {\n  description: 'expense which is changed',\n  note: 'THIS IS MY FIRST REDUXXXXXX',\n  amount: 1500,\n  createdAt: 0\n}));\nstore.dispatch(setStartDate(1000));\nstore.dispatch(setEndDate(3000)); //ReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/mac/Desktop/ReactTutorial/Projects/redux-project/src/index.js"],"names":["serviceWorker","createStore","combineReducers","defaultExpenses","defaultFilter","text","sortBy","startDate","undefined","endDate","initialState","expenses","id","description","note","amount","createdAt","filters","rootReducer","expensesReducer","filterReducer","store","subscribe","state","getState","filteredExpenses","getFilteredExpenses","console","log","dispatch","addExpense","editExpense","setStartDate","setEndDate","unregister"],"mappings":"AAAA;AACA;AACA,OAAO,aAAP,C,CACA;;AACA,OAAO,KAAKA,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAGA;;AACA,IAAMC,eAAe,GAAG,EAAxB;AACA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,MAAM,EAAE,EAFY;AAGpBC,EAAAA,SAAS,EAAEC,SAHS;AAIpBC,EAAAA,OAAO,EAAED;AAJW,CAAtB;AAMA,IAAME,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,WAAW,EAAE,cAFf;AAGEC,IAAAA,IAAI,EAAE,wCAHR;AAIEC,IAAAA,MAAM,EAAE,IAJV;AAKEC,IAAAA,SAAS,EAAE;AALb,GADQ,CADS;AAUnBC,EAAAA,OAAO,EAAE;AACPZ,IAAAA,IAAI,EAAE,MADC;AAEPC,IAAAA,MAAM,EAAE,QAFD;AAEW;AAClBC,IAAAA,SAAS,EAAEC,SAHJ;AAIPC,IAAAA,OAAO,EAAED;AAJF;AAVU,CAArB;AAsBA;;AACA,IAAMU,WAAW,GAAGhB,eAAe,CAAC;AAClCiB,EAAAA,eAAe,EAAfA,eADkC;AAElCC,EAAAA,aAAa,EAAbA;AAFkC,CAAD,CAAnC;AAKA;;AACA,IAAMC,KAAK,GAAGpB,WAAW,CAACiB,WAAD,CAAzB;AACAG,KAAK,CAACC,SAAN,CAAgB,YAAM;AACpB,MAAMC,KAAK,GAAGF,KAAK,CAACG,QAAN,EAAd;AACA,MAAMC,gBAAgB,GAAGC,mBAAmB,CAACH,KAAK,CAACJ,eAAP,EAAwBI,KAAK,CAACH,aAA9B,CAA5C;AAEAO,EAAAA,OAAO,CAACC,GAAR,CAAYH,gBAAZ;AACD,CALD;AAOAJ,KAAK,CAACQ,QAAN,CAAeC,UAAU,CAAC;AAAElB,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,WAAW,EAAE,WAAtB;AAAmCC,EAAAA,IAAI,EAAE,wBAAzC;AAAmEC,EAAAA,MAAM,EAAE,GAA3E;AAAgFC,EAAAA,SAAS,EAAE;AAA3F,CAAD,CAAzB;AACAK,KAAK,CAACQ,QAAN,CAAeC,UAAU,CAAC;AAAElB,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,WAAW,EAAE,aAAtB;AAAqCC,EAAAA,IAAI,EAAE,6BAA3C;AAA0EC,EAAAA,MAAM,EAAE,GAAlF;AAAuFC,EAAAA,SAAS,EAAE;AAAlG,CAAD,CAAzB;AACAK,KAAK,CAACQ,QAAN,CAAeC,UAAU,CAAC;AAAElB,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,WAAW,EAAE,aAAtB;AAAqCC,EAAAA,IAAI,EAAE,6BAA3C;AAA0EC,EAAAA,MAAM,EAAE,GAAlF;AAAuFC,EAAAA,SAAS,EAAE;AAAlG,CAAD,CAAzB;AACAK,KAAK,CAACQ,QAAN,CAAeE,WAAW,CAAC,CAAD,EAAI;AAAElB,EAAAA,WAAW,EAAE,0BAAf;AAA2CC,EAAAA,IAAI,EAAE,6BAAjD;AAAgFC,EAAAA,MAAM,EAAE,IAAxF;AAA8FC,EAAAA,SAAS,EAAE;AAAzG,CAAJ,CAA1B;AACAK,KAAK,CAACQ,QAAN,CAAeG,YAAY,CAAC,IAAD,CAA3B;AACAX,KAAK,CAACQ,QAAN,CAAeI,UAAU,CAAC,IAAD,CAAzB,E,CAGA;AACA;AACA;AACA;;AACAjC,aAAa,CAACkC,UAAd","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers } from 'redux';\n\n\n/*DEFAULT STATES*/\nconst defaultExpenses = [];\nconst defaultFilter = {\n  text: '',\n  sortBy: '',\n  startDate: undefined,\n  endDate: undefined\n}\nconst initialState = {\n  expenses: [\n    {\n      id: 0,\n      description: 'January Rent',\n      note: 'This was the final payment of the rent',\n      amount: 1000,\n      createdAt: 0\n    }\n  ],\n  filters: {\n    text: 'rent',\n    sortBy: 'amount', //Date or amount\n    startDate: undefined,\n    endDate: undefined\n  }\n};\n\n\n\n\n\n/*COMBINE ALL THE REDUCERS*/\nconst rootReducer = combineReducers({\n  expensesReducer,\n  filterReducer\n});\n\n/*STORE CREATE*/\nconst store = createStore(rootReducer);\nstore.subscribe(() => {\n  const state = store.getState();\n  const filteredExpenses = getFilteredExpenses(state.expensesReducer, state.filterReducer);\n\n  console.log(filteredExpenses);\n});\n\nstore.dispatch(addExpense({ id: 0, description: 'İLK REDUX', note: 'THIS IS MY FIRST REDUX', amount: 500, createdAt: 1500}));\nstore.dispatch(addExpense({ id: 1, description: 'İLK REDUXXX', note: 'THIS IS MY FIRST REDUXXXXXX', amount: 500, createdAt: 2500}));\nstore.dispatch(addExpense({ id: 2, description: 'İLK REDUXXX', note: 'THIS IS MY FIRST REDUXXXXXX', amount: 500, createdAt: 0}));\nstore.dispatch(editExpense(2, { description: 'expense which is changed', note: 'THIS IS MY FIRST REDUXXXXXX', amount: 1500, createdAt: 0}));\nstore.dispatch(setStartDate(1000));\nstore.dispatch(setEndDate(3000));\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}