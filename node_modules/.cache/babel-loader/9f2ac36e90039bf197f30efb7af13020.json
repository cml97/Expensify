{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _object = require('object.assign');\n\nvar _object2 = _interopRequireDefault(_object);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _airbnbPropTypes = require('airbnb-prop-types');\n\nvar _reactWithStyles = require('react-with-styles');\n\nvar _defaultPhrases = require('../defaultPhrases');\n\nvar _getPhrasePropTypes = require('../utils/getPhrasePropTypes');\n\nvar _getPhrasePropTypes2 = _interopRequireDefault(_getPhrasePropTypes);\n\nvar _baseClass = require('../utils/baseClass');\n\nvar _LeftArrow = require('./LeftArrow');\n\nvar _LeftArrow2 = _interopRequireDefault(_LeftArrow);\n\nvar _RightArrow = require('./RightArrow');\n\nvar _RightArrow2 = _interopRequireDefault(_RightArrow);\n\nvar _ChevronUp = require('./ChevronUp');\n\nvar _ChevronUp2 = _interopRequireDefault(_ChevronUp);\n\nvar _ChevronDown = require('./ChevronDown');\n\nvar _ChevronDown2 = _interopRequireDefault(_ChevronDown);\n\nvar _ScrollableOrientationShape = require('../shapes/ScrollableOrientationShape');\n\nvar _ScrollableOrientationShape2 = _interopRequireDefault(_ScrollableOrientationShape);\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nvar propTypes = process.env.NODE_ENV !== \"production\" ? (0, _airbnbPropTypes.forbidExtraProps)((0, _object2['default'])({}, _reactWithStyles.withStylesPropTypes, {\n  navPrev: _propTypes2['default'].node,\n  navNext: _propTypes2['default'].node,\n  orientation: _ScrollableOrientationShape2['default'],\n  onPrevMonthClick: _propTypes2['default'].func,\n  onNextMonthClick: _propTypes2['default'].func,\n  // internationalization\n  phrases: _propTypes2['default'].shape((0, _getPhrasePropTypes2['default'])(_defaultPhrases.DayPickerNavigationPhrases)),\n  isRTL: _propTypes2['default'].bool\n})) : {};\n;\nvar defaultProps = {\n  navPrev: null,\n  navNext: null,\n  orientation: _constants.HORIZONTAL_ORIENTATION,\n  onPrevMonthClick: function () {\n    function onPrevMonthClick() {}\n\n    return onPrevMonthClick;\n  }(),\n  onNextMonthClick: function () {\n    function onNextMonthClick() {}\n\n    return onNextMonthClick;\n  }(),\n  // internationalization\n  phrases: _defaultPhrases.DayPickerNavigationPhrases,\n  isRTL: false\n};\n\nfunction DayPickerNavigation(_ref) {\n  var navPrev = _ref.navPrev,\n      navNext = _ref.navNext,\n      onPrevMonthClick = _ref.onPrevMonthClick,\n      onNextMonthClick = _ref.onNextMonthClick,\n      orientation = _ref.orientation,\n      phrases = _ref.phrases,\n      isRTL = _ref.isRTL,\n      styles = _ref.styles;\n  var isHorizontal = orientation === _constants.HORIZONTAL_ORIENTATION;\n  var isVertical = orientation !== _constants.HORIZONTAL_ORIENTATION;\n  var isVerticalScrollable = orientation === _constants.VERTICAL_SCROLLABLE;\n  var navPrevIcon = navPrev;\n  var navNextIcon = navNext;\n  var isDefaultNavPrev = false;\n  var isDefaultNavNext = false;\n\n  if (!navPrevIcon) {\n    isDefaultNavPrev = true;\n    var Icon = isVertical ? _ChevronUp2['default'] : _LeftArrow2['default'];\n\n    if (isRTL && !isVertical) {\n      Icon = _RightArrow2['default'];\n    }\n\n    navPrevIcon = _react2['default'].createElement(Icon, (0, _reactWithStyles.css)(isHorizontal && styles.DayPickerNavigation_svg__horizontal, isVertical && styles.DayPickerNavigation_svg__vertical));\n  }\n\n  if (!navNextIcon) {\n    isDefaultNavNext = true;\n\n    var _Icon = isVertical ? _ChevronDown2['default'] : _RightArrow2['default'];\n\n    if (isRTL && !isVertical) {\n      _Icon = _LeftArrow2['default'];\n    }\n\n    navNextIcon = _react2['default'].createElement(_Icon, (0, _reactWithStyles.css)(isHorizontal && styles.DayPickerNavigation_svg__horizontal, isVertical && styles.DayPickerNavigation_svg__vertical));\n  }\n\n  var isDefaultNav = isVerticalScrollable ? isDefaultNavNext : isDefaultNavNext || isDefaultNavPrev;\n  return _react2['default'].createElement('div', _reactWithStyles.css.apply(undefined, [styles.DayPickerNavigation, isHorizontal && styles.DayPickerNavigation__horizontal].concat(_toConsumableArray(isVertical && [styles.DayPickerNavigation__vertical, isDefaultNav && styles.DayPickerNavigation__verticalDefault]), _toConsumableArray(isVerticalScrollable && [styles.DayPickerNavigation__verticalScrollable, isDefaultNav && styles.DayPickerNavigation__verticalScrollableDefault]))), !isVerticalScrollable && _react2['default'].createElement('div', _extends({\n    role: 'button',\n    tabIndex: '0'\n  }, _reactWithStyles.css.apply(undefined, [styles.DayPickerNavigation_button, isDefaultNavPrev && styles.DayPickerNavigation_button__default].concat(_toConsumableArray(isHorizontal && [styles.DayPickerNavigation_button__horizontal].concat(_toConsumableArray(isDefaultNavPrev && [styles.DayPickerNavigation_button__horizontalDefault, !isRTL && styles.DayPickerNavigation_leftButton__horizontalDefault, isRTL && styles.DayPickerNavigation_rightButton__horizontalDefault]))), _toConsumableArray(isVertical && [styles.DayPickerNavigation_button__vertical].concat(_toConsumableArray(isDefaultNavPrev && [styles.DayPickerNavigation_button__verticalDefault, styles.DayPickerNavigation_prevButton__verticalDefault]))))), {\n    'aria-label': phrases.jumpToPrevMonth,\n    onClick: onPrevMonthClick,\n    onKeyUp: function () {\n      function onKeyUp(e) {\n        var key = e.key;\n        if (key === 'Enter' || key === ' ') onPrevMonthClick(e);\n      }\n\n      return onKeyUp;\n    }(),\n    onMouseUp: function () {\n      function onMouseUp(e) {\n        e.currentTarget.blur();\n      }\n\n      return onMouseUp;\n    }()\n  }), navPrevIcon), _react2['default'].createElement('div', _extends({\n    role: 'button',\n    tabIndex: '0'\n  }, _reactWithStyles.css.apply(undefined, [styles.DayPickerNavigation_button, isDefaultNavNext && styles.DayPickerNavigation_button__default].concat(_toConsumableArray(isHorizontal && [styles.DayPickerNavigation_button__horizontal].concat(_toConsumableArray(isDefaultNavNext && [styles.DayPickerNavigation_button__horizontalDefault, isRTL && styles.DayPickerNavigation_leftButton__horizontalDefault, !isRTL && styles.DayPickerNavigation_rightButton__horizontalDefault]))), _toConsumableArray(isVertical && [styles.DayPickerNavigation_button__vertical, styles.DayPickerNavigation_nextButton__vertical].concat(_toConsumableArray(isDefaultNavNext && [styles.DayPickerNavigation_button__verticalDefault, styles.DayPickerNavigation_nextButton__verticalDefault, isVerticalScrollable && styles.DayPickerNavigation_nextButton__verticalScrollableDefault]))))), {\n    'aria-label': phrases.jumpToNextMonth,\n    onClick: onNextMonthClick,\n    onKeyUp: function () {\n      function onKeyUp(e) {\n        var key = e.key;\n        if (key === 'Enter' || key === ' ') onNextMonthClick(e);\n      }\n\n      return onKeyUp;\n    }(),\n    onMouseUp: function () {\n      function onMouseUp(e) {\n        e.currentTarget.blur();\n      }\n\n      return onMouseUp;\n    }()\n  }), navNextIcon));\n}\n\nDayPickerNavigation.propTypes = process.env.NODE_ENV !== \"production\" ? propTypes : {};\nDayPickerNavigation.defaultProps = defaultProps;\nexports['default'] = (0, _reactWithStyles.withStyles)(function (_ref2) {\n  var _ref2$reactDates = _ref2.reactDates,\n      color = _ref2$reactDates.color,\n      zIndex = _ref2$reactDates.zIndex;\n  return {\n    DayPickerNavigation: {\n      position: 'relative',\n      zIndex: zIndex + 2\n    },\n    DayPickerNavigation__horizontal: {\n      height: 0\n    },\n    DayPickerNavigation__vertical: {},\n    DayPickerNavigation__verticalScrollable: {},\n    DayPickerNavigation__verticalDefault: {\n      position: 'absolute',\n      width: '100%',\n      height: 52,\n      bottom: 0,\n      left: 0\n    },\n    DayPickerNavigation__verticalScrollableDefault: {\n      position: 'relative'\n    },\n    DayPickerNavigation_button: {\n      cursor: 'pointer',\n      userSelect: 'none',\n      border: 0,\n      padding: 0,\n      margin: 0\n    },\n    DayPickerNavigation_button__default: {\n      border: '1px solid ' + String(color.core.borderLight),\n      backgroundColor: color.background,\n      color: color.placeholderText,\n      ':focus': {\n        border: '1px solid ' + String(color.core.borderMedium)\n      },\n      ':hover': {\n        border: '1px solid ' + String(color.core.borderMedium)\n      },\n      ':active': {\n        background: color.backgroundDark\n      }\n    },\n    DayPickerNavigation_button__horizontal: {},\n    DayPickerNavigation_button__horizontalDefault: {\n      position: 'absolute',\n      top: 18,\n      lineHeight: 0.78,\n      borderRadius: 3,\n      padding: '6px 9px'\n    },\n    DayPickerNavigation_leftButton__horizontalDefault: {\n      left: 22\n    },\n    DayPickerNavigation_rightButton__horizontalDefault: {\n      right: 22\n    },\n    DayPickerNavigation_button__vertical: {},\n    DayPickerNavigation_button__verticalDefault: {\n      padding: 5,\n      background: color.background,\n      boxShadow: '0 0 5px 2px rgba(0, 0, 0, 0.1)',\n      position: 'relative',\n      display: 'inline-block',\n      textAlign: 'center',\n      height: '100%',\n      width: '50%'\n    },\n    DayPickerNavigation_prevButton__verticalDefault: {},\n    DayPickerNavigation_nextButton__verticalDefault: {\n      borderLeft: 0\n    },\n    DayPickerNavigation_nextButton__verticalScrollableDefault: {\n      width: '100%'\n    },\n    DayPickerNavigation_svg__horizontal: {\n      height: 19,\n      width: 19,\n      fill: color.core.grayLight,\n      display: 'block'\n    },\n    DayPickerNavigation_svg__vertical: {\n      height: 42,\n      width: 42,\n      fill: color.text\n    }\n  };\n}, {\n  pureComponent: _baseClass.pureComponentAvailable\n})(DayPickerNavigation);","map":null,"metadata":{},"sourceType":"script"}