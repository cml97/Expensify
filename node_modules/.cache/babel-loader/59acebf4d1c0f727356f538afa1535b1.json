{"ast":null,"code":"import _toConsumableArray from \"/Users/mac/Desktop/ReactTutorial/Projects/redux-project/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// import React from 'react';\n// import ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers } from 'redux';\n/*DEFAULT STATES*/\n\nvar defaultExpenses = [];\nvar defaultFilter = {\n  text: '',\n  sortBy: '',\n  startDate: undefined,\n  endDate: undefined\n};\nvar initialState = {\n  expenses: [{\n    id: 0,\n    description: 'January Rent',\n    note: 'This was the final payment of the rent',\n    amount: 1000,\n    createdAt: 0\n  }],\n  filters: {\n    text: 'rent',\n    sortBy: 'amount',\n    //Date or amount\n    startDate: undefined,\n    endDate: undefined\n  }\n};\n/*ACTIONS*/\n\nvar addExpense = function addExpense(expense) {\n  return {\n    type: types.ADD_EXPENSE,\n    payload: expense\n  };\n};\n\nvar removeExpense = function removeExpense(expense) {\n  return {\n    type: 'REMOVE_EXPENSE',\n    payload: expense\n  };\n};\n\nvar getExpenses = function getExpenses() {\n  return {\n    type: 'GET_EXPENSES'\n  };\n};\n\nvar getExpense = function getExpense(id) {\n  return {\n    type: 'GET_EXPENSE',\n    payload: id\n  };\n};\n/*REDUCERS*/\n\n\nvar expensesReducer = function expensesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultExpenses;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD_EXPENSE':\n      return _toConsumableArray(state).concat([action.payload]);\n\n    default:\n      return state;\n  }\n};\n\nvar filterReducer = function filterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultFilter;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n/*COMBINE ALL THE REDUCERS*/\n\n\nvar rootReducer = combineReducers({\n  expensesReducer: expensesReducer,\n  filterReducer: filterReducer\n});\n/*STORE CREATE*/\n\nvar store = createStore(rootReducer);\nstore.dispatch(addExpense({\n  id: 0,\n  description: 'İLK REDUX',\n  note: 'THIS IS MY FIRST REDUX',\n  amount: 500,\n  createdAt: 0\n}));\nconsole.log(store.getState()); //ReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/mac/Desktop/ReactTutorial/Projects/redux-project/src/index.js"],"names":["serviceWorker","createStore","combineReducers","defaultExpenses","defaultFilter","text","sortBy","startDate","undefined","endDate","initialState","expenses","id","description","note","amount","createdAt","filters","addExpense","expense","type","types","ADD_EXPENSE","payload","removeExpense","getExpenses","getExpense","expensesReducer","state","action","filterReducer","rootReducer","store","dispatch","console","log","getState","unregister"],"mappings":";AAAA;AACA;AACA,OAAO,aAAP,C,CACA;;AACA,OAAO,KAAKA,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAGA;;AACA,IAAMC,eAAe,GAAG,EAAxB;AACA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,MAAM,EAAE,EAFY;AAGpBC,EAAAA,SAAS,EAAEC,SAHS;AAIpBC,EAAAA,OAAO,EAAED;AAJW,CAAtB;AAMA,IAAME,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,WAAW,EAAE,cAFf;AAGEC,IAAAA,IAAI,EAAE,wCAHR;AAIEC,IAAAA,MAAM,EAAE,IAJV;AAKEC,IAAAA,SAAS,EAAE;AALb,GADQ,CADS;AAUnBC,EAAAA,OAAO,EAAE;AACPZ,IAAAA,IAAI,EAAE,MADC;AAEPC,IAAAA,MAAM,EAAE,QAFD;AAEW;AAClBC,IAAAA,SAAS,EAAEC,SAHJ;AAIPC,IAAAA,OAAO,EAAED;AAJF;AAVU,CAArB;AAkBA;;AACA,IAAMU,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAa;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEC,KAAK,CAACC,WADP;AAELC,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALD;;AAOA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,CAACL,OAAD,EAAa;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAE,gBADD;AAELG,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALD;;AAOA,IAAMM,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,SAAO;AACLL,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJD;;AAMA,IAAMM,UAAU,GAAG,SAAbA,UAAa,CAACd,EAAD,EAAQ;AACzB,SAAO;AACLQ,IAAAA,IAAI,EAAE,aADD;AAELG,IAAAA,OAAO,EAAEX;AAFJ,GAAP;AAID,CALD;AAOA;;;AACA,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,GAAqC;AAAA,MAApCC,KAAoC,uEAA5BzB,eAA4B;AAAA,MAAX0B,MAAW;;AACzD,UAAQA,MAAM,CAACT,IAAf;AACE,SAAK,aAAL;AACE,gCACKQ,KADL,UAEEC,MAAM,CAACN,OAFT;;AAIF;AACE,aAAOK,KAAP;AAPJ;AASH,CAVD;;AAWA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAmC;AAAA,MAAlCF,KAAkC,uEAA1BxB,aAA0B;AAAA,MAAXyB,MAAW;;AACvD,UAAQA,MAAM,CAACT,IAAf;AACE;AACE,aAAOQ,KAAP;AAFJ;AAID,CALD;AAOA;;;AACA,IAAMG,WAAW,GAAG7B,eAAe,CAAC;AAClCyB,EAAAA,eAAe,EAAfA,eADkC;AAElCG,EAAAA,aAAa,EAAbA;AAFkC,CAAD,CAAnC;AAMA;;AACA,IAAME,KAAK,GAAG/B,WAAW,CAAC8B,WAAD,CAAzB;AAEAC,KAAK,CAACC,QAAN,CAAef,UAAU,CAAC;AAAEN,EAAAA,EAAE,EAAE,CAAN;AAASC,EAAAA,WAAW,EAAE,WAAtB;AAAmCC,EAAAA,IAAI,EAAE,wBAAzC;AAAmEC,EAAAA,MAAM,EAAE,GAA3E;AAAgFC,EAAAA,SAAS,EAAE;AAA3F,CAAD,CAAzB;AACAkB,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ,E,CAEA;AACA;AACA;AACA;;AACApC,aAAa,CAACqC,UAAd","sourcesContent":["// import React from 'react';\n// import ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, combineReducers } from 'redux';\n\n\n/*DEFAULT STATES*/\nconst defaultExpenses = [];\nconst defaultFilter = {\n  text: '',\n  sortBy: '',\n  startDate: undefined,\n  endDate: undefined\n}\nconst initialState = {\n  expenses: [\n    {\n      id: 0,\n      description: 'January Rent',\n      note: 'This was the final payment of the rent',\n      amount: 1000,\n      createdAt: 0\n    }\n  ],\n  filters: {\n    text: 'rent',\n    sortBy: 'amount', //Date or amount\n    startDate: undefined,\n    endDate: undefined\n  }\n};\n\n/*ACTIONS*/\nconst addExpense = (expense) => {\n  return {\n    type: types.ADD_EXPENSE,\n    payload: expense\n  }\n};\n\nconst removeExpense = (expense) => {\n  return {\n    type: 'REMOVE_EXPENSE',\n    payload: expense\n  }\n};\n\nconst getExpenses = () => {\n  return {\n    type: 'GET_EXPENSES'\n  }\n}\n\nconst getExpense = (id) => {\n  return {\n    type: 'GET_EXPENSE',\n    payload: id\n  }\n};\n\n/*REDUCERS*/\nconst expensesReducer = (state = defaultExpenses, action) => {\n    switch (action.type) {\n      case 'ADD_EXPENSE':\n        return [\n          ...state,\n          action.payload\n        ]\n      default:\n        return state;\n    }\n}\nconst filterReducer = (state = defaultFilter, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n}\n\n/*COMBINE ALL THE REDUCERS*/\nconst rootReducer = combineReducers({\n  expensesReducer,\n  filterReducer\n});\n\n\n/*STORE CREATE*/\nconst store = createStore(rootReducer);\n\nstore.dispatch(addExpense({ id: 0, description: 'İLK REDUX', note: 'THIS IS MY FIRST REDUX', amount: 500, createdAt: 0}));\nconsole.log(store.getState());\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}