{"ast":null,"code":"import _objectSpread from \"/Users/mac/Desktop/ReactTutorial/Projects/redux-project/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/mac/Desktop/ReactTutorial/Projects/redux-project/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mac/Desktop/ReactTutorial/Projects/redux-project/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mac/Desktop/ReactTutorial/Projects/redux-project/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mac/Desktop/ReactTutorial/Projects/redux-project/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/mac/Desktop/ReactTutorial/Projects/redux-project/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/mac/Desktop/ReactTutorial/Projects/redux-project/src/components/ExpenseForm.jsx\";\nimport React from 'react';\nimport { SingleDatePicker } from 'react-dates';\nimport moment from 'moment';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { addExpense } from '../actions/expenses.js';\n\nvar ExpenseForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ExpenseForm, _React$Component);\n\n  function ExpenseForm(props) {\n    var _this;\n\n    _classCallCheck(this, ExpenseForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExpenseForm).call(this, props));\n\n    _this.onFocusChange = function (_ref) {\n      var focused = _ref.focused;\n\n      _this.setState({\n        calendarFocused: focused\n      });\n    };\n\n    _this.updateData = function (key, value) {\n      var form = _this.state.form;\n      form[key] = value;\n\n      _this.setState({\n        form: form\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var form = _this.state.form;\n      var valid = form.description && form.amount;\n\n      if (valid && _this.props.onSubmit) {\n        _this.setState({\n          error: ''\n        });\n\n        _this.props.onSubmit(_objectSpread({}, _this.state.form, {\n          createdAt: _this.state.createdAt.valueOf()\n        }));\n      } else {\n        _this.setState({\n          error: 'Please enter description and amount'\n        });\n      }\n    };\n\n    _this.state = {\n      form: {\n        description: '',\n        note: '',\n        amount: 0,\n        createdAt: moment()\n      },\n      calendarFocused: false,\n      error: ''\n    };\n    return _this;\n  }\n\n  _createClass(ExpenseForm, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          form = _this$state.form,\n          calendarFocused = _this$state.calendarFocused;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return _this2.handleSubmit(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        autoFocus: true,\n        value: form.description,\n        onChange: function onChange(e) {\n          return _this2.updateData('description', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount\",\n        onChange: function onChange(e) {\n          return _this2.updateData('amount', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(SingleDatePicker, {\n        date: form.createdAt,\n        onDateChange: function onDateChange(createdAt) {\n          return _this2.updateData('createdAt', createdAt);\n        },\n        focused: calendarFocused,\n        onFocusChange: function onFocusChange(_ref2) {\n          var focused = _ref2.focused;\n          return _this2.onFocusChange({\n            focused: focused\n          });\n        },\n        numberOfMonths: 1,\n        isOutsideRange: function isOutsideRange() {\n          return false;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        placeholder: \"Add a note for your expense\",\n        onChange: function onChange(e) {\n          return _this2.updateData('note', e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return ExpenseForm;\n}(React.Component);\n\nexport default ExpenseForm;","map":{"version":3,"sources":["/Users/mac/Desktop/ReactTutorial/Projects/redux-project/src/components/ExpenseForm.jsx"],"names":["React","SingleDatePicker","moment","addExpense","ExpenseForm","props","onFocusChange","focused","setState","calendarFocused","updateData","key","value","form","state","handleSubmit","e","preventDefault","valid","description","amount","onSubmit","error","createdAt","valueOf","note","target","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { SingleDatePicker } from 'react-dates';\nimport moment from 'moment';\nimport 'react-dates/initialize';\nimport 'react-dates/lib/css/_datepicker.css';\nimport { addExpense } from '../actions/expenses.js';\n\nclass ExpenseForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      form: {\n        description: '',\n        note: '',\n        amount: 0,\n        createdAt: moment(),\n      },\n      calendarFocused: false,\n      error: ''\n    }\n  }\n  componentWillMount() {\n\n  }\n  onFocusChange = ({ focused }) => {\n    this.setState({\n      calendarFocused: focused\n    })\n  }\n  updateData = (key, value) => {\n    let { form } = this.state;\n    form[key] = value;\n\n    this.setState({\n      form\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let { form } = this.state;\n    let valid = form.description && form.amount;\n\n    if (valid && this.props.onSubmit) {\n      this.setState({\n        error: ''\n      })\n      this.props.onSubmit({...this.state.form, createdAt: this.state.createdAt.valueOf()});\n    }\n    else {\n      this.setState({\n        error: 'Please enter description and amount'\n      })\n    }\n  }\n  render() {\n    let { form, calendarFocused } = this.state;\n\n    return (\n    <div>\n      <form onSubmit={(e) => this.handleSubmit(e)}>\n        <input type=\"text\" placeholder=\"Description\" autoFocus value={form.description} onChange={(e) => this.updateData('description', e.target.value )}/>\n        <input type=\"number\" placeholder=\"Amount\" onChange={(e) => this.updateData('amount', e.target.value)}/>\n        <SingleDatePicker\n           date={form.createdAt}\n           onDateChange={(createdAt) => this.updateData('createdAt',createdAt)}\n           focused={calendarFocused}\n           onFocusChange={({focused}) => this.onFocusChange({focused})}\n           numberOfMonths={1}\n           isOutsideRange={() => false}\n        />\n        <textarea placeholder=\"Add a note for your expense\" onChange={(e) => this.updateData('note', e.target.value)}></textarea>\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  )\n  }\n}\nexport default ExpenseForm;\n"]},"metadata":{},"sourceType":"module"}