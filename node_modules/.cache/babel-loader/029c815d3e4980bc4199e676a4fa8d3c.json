{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _reactMomentProptypes = require('react-moment-proptypes');\n\nvar _reactMomentProptypes2 = _interopRequireDefault(_reactMomentProptypes);\n\nvar _airbnbPropTypes = require('airbnb-prop-types');\n\nvar _OpenDirectionShape = require('../shapes/OpenDirectionShape');\n\nvar _OpenDirectionShape2 = _interopRequireDefault(_OpenDirectionShape);\n\nvar _defaultPhrases = require('../defaultPhrases');\n\nvar _getPhrasePropTypes = require('../utils/getPhrasePropTypes');\n\nvar _getPhrasePropTypes2 = _interopRequireDefault(_getPhrasePropTypes);\n\nvar _SingleDatePickerInput = require('./SingleDatePickerInput');\n\nvar _SingleDatePickerInput2 = _interopRequireDefault(_SingleDatePickerInput);\n\nvar _IconPositionShape = require('../shapes/IconPositionShape');\n\nvar _IconPositionShape2 = _interopRequireDefault(_IconPositionShape);\n\nvar _DisabledShape = require('../shapes/DisabledShape');\n\nvar _DisabledShape2 = _interopRequireDefault(_DisabledShape);\n\nvar _toMomentObject = require('../utils/toMomentObject');\n\nvar _toMomentObject2 = _interopRequireDefault(_toMomentObject);\n\nvar _toLocalizedDateString = require('../utils/toLocalizedDateString');\n\nvar _toLocalizedDateString2 = _interopRequireDefault(_toLocalizedDateString);\n\nvar _isInclusivelyAfterDay = require('../utils/isInclusivelyAfterDay');\n\nvar _isInclusivelyAfterDay2 = _interopRequireDefault(_isInclusivelyAfterDay);\n\nvar _baseClass = require('../utils/baseClass');\n\nvar _baseClass2 = _interopRequireDefault(_baseClass);\n\nvar _constants = require('../constants');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar propTypes = (0, _airbnbPropTypes.forbidExtraProps)({\n  date: _reactMomentProptypes2['default'].momentObj,\n  onDateChange: _propTypes2['default'].func.isRequired,\n  focused: _propTypes2['default'].bool,\n  onFocusChange: _propTypes2['default'].func.isRequired,\n  id: _propTypes2['default'].string.isRequired,\n  placeholder: _propTypes2['default'].string,\n  // also used as label\n  screenReaderMessage: _propTypes2['default'].string,\n  showClearDate: _propTypes2['default'].bool,\n  showCaret: _propTypes2['default'].bool,\n  showDefaultInputIcon: _propTypes2['default'].bool,\n  inputIconPosition: _IconPositionShape2['default'],\n  disabled: _DisabledShape2['default'],\n  required: _propTypes2['default'].bool,\n  readOnly: _propTypes2['default'].bool,\n  openDirection: _OpenDirectionShape2['default'],\n  noBorder: _propTypes2['default'].bool,\n  block: _propTypes2['default'].bool,\n  small: _propTypes2['default'].bool,\n  regular: _propTypes2['default'].bool,\n  verticalSpacing: _airbnbPropTypes.nonNegativeInteger,\n  keepOpenOnDateSelect: _propTypes2['default'].bool,\n  reopenPickerOnClearDate: _propTypes2['default'].bool,\n  isOutsideRange: _propTypes2['default'].func,\n  displayFormat: _propTypes2['default'].oneOfType([_propTypes2['default'].string, _propTypes2['default'].func]),\n  onClose: _propTypes2['default'].func,\n  onKeyDownArrowDown: _propTypes2['default'].func,\n  onKeyDownQuestionMark: _propTypes2['default'].func,\n  customInputIcon: _propTypes2['default'].node,\n  customCloseIcon: _propTypes2['default'].node,\n  // accessibility\n  isFocused: _propTypes2['default'].bool,\n  // i18n\n  phrases: _propTypes2['default'].shape((0, _getPhrasePropTypes2['default'])(_defaultPhrases.SingleDatePickerInputPhrases)),\n  isRTL: _propTypes2['default'].bool\n});\nvar defaultProps = {\n  date: null,\n  focused: false,\n  placeholder: '',\n  screenReaderMessage: 'Date',\n  showClearDate: false,\n  showCaret: false,\n  showDefaultInputIcon: false,\n  inputIconPosition: _constants.ICON_BEFORE_POSITION,\n  disabled: false,\n  required: false,\n  readOnly: false,\n  openDirection: _constants.OPEN_DOWN,\n  noBorder: false,\n  block: false,\n  small: false,\n  regular: false,\n  verticalSpacing: undefined,\n  keepOpenOnDateSelect: false,\n  reopenPickerOnClearDate: false,\n  isOutsideRange: function () {\n    function isOutsideRange(day) {\n      return !(0, _isInclusivelyAfterDay2['default'])(day, (0, _moment2['default'])());\n    }\n\n    return isOutsideRange;\n  }(),\n  displayFormat: function () {\n    function displayFormat() {\n      return _moment2['default'].localeData().longDateFormat('L');\n    }\n\n    return displayFormat;\n  }(),\n  onClose: function () {\n    function onClose() {}\n\n    return onClose;\n  }(),\n  onKeyDownArrowDown: function () {\n    function onKeyDownArrowDown() {}\n\n    return onKeyDownArrowDown;\n  }(),\n  onKeyDownQuestionMark: function () {\n    function onKeyDownQuestionMark() {}\n\n    return onKeyDownQuestionMark;\n  }(),\n  customInputIcon: null,\n  customCloseIcon: null,\n  // accessibility\n  isFocused: false,\n  // i18n\n  phrases: _defaultPhrases.SingleDatePickerInputPhrases,\n  isRTL: false\n};\n/** @extends React.Component */\n\nvar SingleDatePickerInputController = function (_BaseClass) {\n  _inherits(SingleDatePickerInputController, _BaseClass);\n\n  function SingleDatePickerInputController(props) {\n    _classCallCheck(this, SingleDatePickerInputController);\n\n    var _this = _possibleConstructorReturn(this, (SingleDatePickerInputController.__proto__ || Object.getPrototypeOf(SingleDatePickerInputController)).call(this, props));\n\n    _this.onChange = _this.onChange.bind(_this);\n    _this.onFocus = _this.onFocus.bind(_this);\n    _this.onClearFocus = _this.onClearFocus.bind(_this);\n    _this.clearDate = _this.clearDate.bind(_this);\n    return _this;\n  }\n\n  _createClass(SingleDatePickerInputController, [{\n    key: 'onChange',\n    value: function () {\n      function onChange(dateString) {\n        var _props = this.props,\n            isOutsideRange = _props.isOutsideRange,\n            keepOpenOnDateSelect = _props.keepOpenOnDateSelect,\n            onDateChange = _props.onDateChange,\n            onFocusChange = _props.onFocusChange,\n            onClose = _props.onClose;\n        var newDate = (0, _toMomentObject2['default'])(dateString, this.getDisplayFormat());\n        var isValid = newDate && !isOutsideRange(newDate);\n\n        if (isValid) {\n          onDateChange(newDate);\n\n          if (!keepOpenOnDateSelect) {\n            onFocusChange({\n              focused: false\n            });\n            onClose({\n              date: newDate\n            });\n          }\n        } else {\n          onDateChange(null);\n        }\n      }\n\n      return onChange;\n    }()\n  }, {\n    key: 'onFocus',\n    value: function () {\n      function onFocus() {\n        var _props2 = this.props,\n            onFocusChange = _props2.onFocusChange,\n            disabled = _props2.disabled;\n\n        if (!disabled) {\n          onFocusChange({\n            focused: true\n          });\n        }\n      }\n\n      return onFocus;\n    }()\n  }, {\n    key: 'onClearFocus',\n    value: function () {\n      function onClearFocus() {\n        var _props3 = this.props,\n            focused = _props3.focused,\n            onFocusChange = _props3.onFocusChange,\n            onClose = _props3.onClose,\n            date = _props3.date;\n        if (!focused) return;\n        onFocusChange({\n          focused: false\n        });\n        onClose({\n          date: date\n        });\n      }\n\n      return onClearFocus;\n    }()\n  }, {\n    key: 'getDisplayFormat',\n    value: function () {\n      function getDisplayFormat() {\n        var displayFormat = this.props.displayFormat;\n        return typeof displayFormat === 'string' ? displayFormat : displayFormat();\n      }\n\n      return getDisplayFormat;\n    }()\n  }, {\n    key: 'getDateString',\n    value: function () {\n      function getDateString(date) {\n        var displayFormat = this.getDisplayFormat();\n\n        if (date && displayFormat) {\n          return date && date.format(displayFormat);\n        }\n\n        return (0, _toLocalizedDateString2['default'])(date);\n      }\n\n      return getDateString;\n    }()\n  }, {\n    key: 'clearDate',\n    value: function () {\n      function clearDate() {\n        var _props4 = this.props,\n            onDateChange = _props4.onDateChange,\n            reopenPickerOnClearDate = _props4.reopenPickerOnClearDate,\n            onFocusChange = _props4.onFocusChange;\n        onDateChange(null);\n\n        if (reopenPickerOnClearDate) {\n          onFocusChange({\n            focused: true\n          });\n        }\n      }\n\n      return clearDate;\n    }()\n  }, {\n    key: 'render',\n    value: function () {\n      function render() {\n        var _props5 = this.props,\n            id = _props5.id,\n            placeholder = _props5.placeholder,\n            disabled = _props5.disabled,\n            focused = _props5.focused,\n            isFocused = _props5.isFocused,\n            required = _props5.required,\n            readOnly = _props5.readOnly,\n            openDirection = _props5.openDirection,\n            showClearDate = _props5.showClearDate,\n            showCaret = _props5.showCaret,\n            showDefaultInputIcon = _props5.showDefaultInputIcon,\n            inputIconPosition = _props5.inputIconPosition,\n            customCloseIcon = _props5.customCloseIcon,\n            customInputIcon = _props5.customInputIcon,\n            date = _props5.date,\n            phrases = _props5.phrases,\n            onKeyDownArrowDown = _props5.onKeyDownArrowDown,\n            onKeyDownQuestionMark = _props5.onKeyDownQuestionMark,\n            screenReaderMessage = _props5.screenReaderMessage,\n            isRTL = _props5.isRTL,\n            noBorder = _props5.noBorder,\n            block = _props5.block,\n            small = _props5.small,\n            regular = _props5.regular,\n            verticalSpacing = _props5.verticalSpacing;\n        var displayValue = this.getDateString(date);\n        return _react2['default'].createElement(_SingleDatePickerInput2['default'], {\n          id: id,\n          placeholder: placeholder,\n          focused: focused,\n          isFocused: isFocused,\n          disabled: disabled,\n          required: required,\n          readOnly: readOnly,\n          openDirection: openDirection,\n          showCaret: showCaret,\n          onClearDate: this.clearDate,\n          showClearDate: showClearDate,\n          showDefaultInputIcon: showDefaultInputIcon,\n          inputIconPosition: inputIconPosition,\n          customCloseIcon: customCloseIcon,\n          customInputIcon: customInputIcon,\n          displayValue: displayValue,\n          onChange: this.onChange,\n          onFocus: this.onFocus,\n          onKeyDownShiftTab: this.onClearFocus,\n          onKeyDownTab: this.onClearFocus,\n          onKeyDownArrowDown: onKeyDownArrowDown,\n          onKeyDownQuestionMark: onKeyDownQuestionMark,\n          screenReaderMessage: screenReaderMessage,\n          phrases: phrases,\n          isRTL: isRTL,\n          noBorder: noBorder,\n          block: block,\n          small: small,\n          regular: regular,\n          verticalSpacing: verticalSpacing\n        });\n      }\n\n      return render;\n    }()\n  }]);\n\n  return SingleDatePickerInputController;\n}(_baseClass2['default']);\n\nexports['default'] = SingleDatePickerInputController;\nSingleDatePickerInputController.propTypes = propTypes;\nSingleDatePickerInputController.defaultProps = defaultProps;","map":null,"metadata":{},"sourceType":"script"}